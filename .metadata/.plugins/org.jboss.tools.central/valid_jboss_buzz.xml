<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>New language support features in Apache Camel VS Code extension 0.0.27</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/1VtadhrXViw/" /><category term="Agile Integration" scheme="searchisko:content:tags" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="Camel K" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="language server" scheme="searchisko:content:tags" /><category term="Stream Processing" scheme="searchisko:content:tags" /><category term="VS Code" scheme="searchisko:content:tags" /><category term="VS Code Extension" scheme="searchisko:content:tags" /><author><name>Aurélien Pupier</name></author><id>searchisko:content:id:jbossorg_blog-new_language_support_features_in_apache_camel_vs_code_extension_0_0_27</id><updated>2020-09-18T07:00:32Z</updated><published>2020-09-18T07:00:32Z</published><content type="html">&lt;p&gt;In this article, I share several new &lt;a target="_blank" rel="nofollow" href="https://microsoft.github.io/language-server-protocol/"&gt;language support&lt;/a&gt; features in the recently released &lt;a target="_blank" rel="nofollow" href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-apache-camel"&gt;Language Support for Apache Camel VS Code extension 0.0.27&lt;/a&gt;. Before I discuss these improvements, please note that updates to the VS Code extension are available in other IDEs that support the &lt;a target="_blank" rel="nofollow" href="https://github.com/camel-tooling/camel-language-server/"&gt;Camel Language Server&lt;/a&gt;, including &lt;a target="_blank" rel="nofollow" href="https://www.eclipse.org/ide/"&gt;Eclipse IDE&lt;/a&gt;, &lt;a target="_blank" rel="nofollow" href="https://www.eclipse.org/che/"&gt;Eclipse Che&lt;/a&gt;, and &lt;a target="_blank" rel="nofollow" href="https://github.com/camel-tooling/camel-language-server/#clients"&gt;more&lt;/a&gt;. It is simply easier to focus on one IDE for my demonstrations, so I&amp;#8217;ve chosen &lt;a href="https://developers.redhat.com/blog/category/vs-code/"&gt;VS Code&lt;/a&gt;.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: &lt;a target="_blank" rel="nofollow" href="https://camel.apache.org/manual/latest/"&gt;Apache Camel&lt;/a&gt; is a versatile open source integration framework based on known &lt;a target="_blank" rel="nofollow" href="https://camel.apache.org/components/latest/eips/enterprise-integration-patterns.html"&gt;enterprise integration patterns&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;span id="more-777727"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Dashed notation for properties&lt;/h2&gt; &lt;p&gt;By default, the Camel Language Server uses CamelCase for property names. With the 0.0.27 release, the tooling now supports using the dash-case, as well. You can choose the notation that you find the most readable and adapt it for the given context (SpringBoot, Quarkus, Kafka, Spring, and other technologies that use Properties files). As an example, &lt;a target="_blank" rel="nofollow" href="https://camel.apache.org/camel-kafka-connector/latest/"&gt;Apache Camel Kafka Connector&lt;/a&gt; prefers the dashed notation.&lt;/p&gt; &lt;p&gt;As demonstrated in Figure 1, the hover feature works for both CamelCase and dash-case notation.&lt;/p&gt; &lt;div id="attachment_777807" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/09/hoverDashedNamesInPropertiesFile.gif"&gt;&lt;img aria-describedby="caption-attachment-777807" class="wp-image-777807" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/hoverDashedNamesInPropertiesFile.gif" alt="A demonstration of the cursor hovering over properties file names in the VS Code console." width="640" height="309" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-777807" class="wp-caption-text"&gt;Figure 1: Use the hover-over feature for a property definition (demo).&lt;/p&gt;&lt;/div&gt; &lt;p&gt;As demonstrated in Figure 2, the completion feature provides the dashed notation if another dashed name is detected in the same file. Otherwise, CamelCase notation is provided.&lt;/p&gt; &lt;div id="attachment_777767" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/09/dashedCompletionForComponentOptionNameInPropertiesFiles.gif"&gt;&lt;img aria-describedby="caption-attachment-777767" class="wp-image-777767" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/dashedCompletionForComponentOptionNameInPropertiesFiles.gif" alt="A demonstration of the dash-case completion option For component names in properties files." width="640" height="423" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-777767" class="wp-caption-text"&gt;Figure 2: Use the completion feature to update the case style in your properties files (demo).&lt;/p&gt;&lt;/div&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: This feature is available within properties files. You can also access it using the &lt;a href="https://developers.redhat.com/blog/2020/08/31/introducing-ide-support-for-apache-camel-k-modeline/"&gt;Camel K Modeline&lt;/a&gt; &lt;code&gt;property&lt;/code&gt; option.&lt;/p&gt; &lt;h2&gt;Improved IDE support for Apache Camel K Modeline&lt;/h2&gt; &lt;p&gt;I shared details of the first iteration of IDE support for Apache Camel K Modeline in my &lt;a href="https://developers.redhat.com/blog/2020/08/31/introducing-ide-support-for-apache-camel-k-modeline/"&gt;previous article&lt;/a&gt;. With this release, we&amp;#8217;ve updated the completion feature to include &lt;code&gt;property-file&lt;/code&gt; and &lt;code&gt;resource&lt;/code&gt; options. The completion operation provides sibling files and files in sibling folders at any depth. For example, in the following, the blue files are provided in the completion:&lt;/p&gt; &lt;pre&gt;| anotherDir--| fileInAnotherDir.yaml| dirWithCamelKIntegrationFile --| test.camelk.yaml  &amp;#60;-- opened file in which we are providing the completion --| &lt;span style="color: #0000ff;"&gt;sibling-file1.txt&lt;/span&gt; --| &lt;span style="color: #0000ff;"&gt;sibling-file2.json&lt;/span&gt; --| my-sibling-folder    --| &lt;span style="color: #0000ff;"&gt;sub-sibling-file3.yaml&lt;/span&gt;    --| aSubFolder      --| &lt;span style="color: #0000ff;"&gt;sub-sibling-file4.txt&lt;/span&gt;&lt;/pre&gt; &lt;h2&gt;Update to Camel Catalog 3.5&lt;/h2&gt; &lt;p&gt;&lt;a target="_blank" rel="nofollow" href="https://camel.apache.org/blog/2020/09/Camel35-Whatsnew/"&gt;Apache Camel 3.5 was recently released&lt;/a&gt;, and the new 3.5 catalog version is provided by default. You can use the &lt;b&gt;File -&amp;#62; Preferences -&amp;#62; Settings -&amp;#62; Apache Camel Tooling -&amp;#62; Camel catalog version&lt;/b&gt; setting to specify a different version of the catalog. See &lt;a href="https://developers.redhat.com/blog/2019/12/16/vs-code-language-support-for-apache-camel-0-0-20-release/"&gt;Camel catalog version options&lt;/a&gt; for more about selecting the catalog version that you want.&lt;/p&gt; &lt;h2&gt;What&amp;#8217;s next for Apache Camel K&lt;/h2&gt; &lt;p&gt;The future is open for Camel K, and we will surely continue to improve language extension support. The Fuse Tooling team is awaiting your feedback on &lt;a target="_blank" rel="nofollow" href="https://issues.redhat.com/browse/FUSETOOLS2"&gt;JIRA&lt;/a&gt;, the Camel Tooling &lt;a target="_blank" rel="nofollow" href="https://github.com/camel-tooling"&gt;GitHub repository&lt;/a&gt;, or whatever method you prefer, like a comment in this article or tweets to me (&lt;a target="_blank" rel="nofollow" href="https://twitter.com/apupier"&gt;@apupier&lt;/a&gt;) or &lt;a target="_blank" rel="nofollow" href="https://twitter.com/FuseTooling"&gt;@FuseTooling&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Your feedback helps us develop the roadmap for future improvements.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fnew-language-support-features-in-apache-camel-vs-code-extension-0-0-27%2F&amp;#38;linkname=New%20language%20support%20features%20in%20Apache%20Camel%20VS%20Code%20extension%200.0.27" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fnew-language-support-features-in-apache-camel-vs-code-extension-0-0-27%2F&amp;#38;linkname=New%20language%20support%20features%20in%20Apache%20Camel%20VS%20Code%20extension%200.0.27" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fnew-language-support-features-in-apache-camel-vs-code-extension-0-0-27%2F&amp;#38;linkname=New%20language%20support%20features%20in%20Apache%20Camel%20VS%20Code%20extension%200.0.27" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fnew-language-support-features-in-apache-camel-vs-code-extension-0-0-27%2F&amp;#38;linkname=New%20language%20support%20features%20in%20Apache%20Camel%20VS%20Code%20extension%200.0.27" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fnew-language-support-features-in-apache-camel-vs-code-extension-0-0-27%2F&amp;#38;linkname=New%20language%20support%20features%20in%20Apache%20Camel%20VS%20Code%20extension%200.0.27" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fnew-language-support-features-in-apache-camel-vs-code-extension-0-0-27%2F&amp;#38;linkname=New%20language%20support%20features%20in%20Apache%20Camel%20VS%20Code%20extension%200.0.27" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fnew-language-support-features-in-apache-camel-vs-code-extension-0-0-27%2F&amp;#38;linkname=New%20language%20support%20features%20in%20Apache%20Camel%20VS%20Code%20extension%200.0.27" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fnew-language-support-features-in-apache-camel-vs-code-extension-0-0-27%2F&amp;#038;title=New%20language%20support%20features%20in%20Apache%20Camel%20VS%20Code%20extension%200.0.27" data-a2a-url="https://developers.redhat.com/blog/2020/09/18/new-language-support-features-in-apache-camel-vs-code-extension-0-0-27/" data-a2a-title="New language support features in Apache Camel VS Code extension 0.0.27"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/09/18/new-language-support-features-in-apache-camel-vs-code-extension-0-0-27/"&gt;New language support features in Apache Camel VS Code extension 0.0.27&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/1VtadhrXViw" height="1" width="1" alt=""/&gt;</content><summary>In this article, I share several new language support features in the recently released Language Support for Apache Camel VS Code extension 0.0.27. Before I discuss these improvements, please note that updates to the VS Code extension are available in other IDEs that support the Camel Language Server, including Eclipse IDE, Eclipse Che, and more. It is simply easier to focus on one IDE for my demo...</summary><dc:creator>Aurélien Pupier</dc:creator><dc:date>2020-09-18T07:00:32Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/09/18/new-language-support-features-in-apache-camel-vs-code-extension-0-0-27/</feedburner:origLink></entry><entry><title>Kubeflow 1.0 monitoring and enhanced JupyterHub builds in Open Data Hub 0.8</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/YnmDLJc6Js8/" /><category term="Argo Workflows" scheme="searchisko:content:tags" /><category term="Big Data" scheme="searchisko:content:tags" /><category term="ci/cd" scheme="searchisko:content:tags" /><category term="ci/cd pipeline" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="JupyterHub" scheme="searchisko:content:tags" /><category term="Kubeflow" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="machine learning" scheme="searchisko:content:tags" /><category term="Open Data Hub" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="operator" scheme="searchisko:content:tags" /><author><name>Juana Nakfour</name></author><id>searchisko:content:id:jbossorg_blog-kubeflow_1_0_monitoring_and_enhanced_jupyterhub_builds_in_open_data_hub_0_8</id><updated>2020-09-18T07:00:17Z</updated><published>2020-09-18T07:00:17Z</published><content type="html">&lt;p&gt;The new &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io"&gt;Open Data Hub version 0.8&lt;/a&gt; (ODH) release includes many new features, continuous integration (CI) additions, and documentation updates. For this release, we focused on enhancing JupyterHub image builds, enabling more &lt;a target="_blank" rel="nofollow" href="https://opendatahub.io/docs/kubeflow/mixing.html"&gt;mixing of Open Data Hub and Kubeflow components&lt;/a&gt;, and designing our comprehensive end-to-end continuous integration and continuous deployment and delivery (CI/CD) process. In this article, we introduce the highlights of this newest release.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: Open Data Hub is an open source project and a community Operator for building an AI-as-a-Service (AIaaS) platform on &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;span id="more-778617"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;JupyterHub&lt;/h2&gt; &lt;p&gt;In an effort to streamline code changes to JupyterHub, we forked two pivotal repositories under the &lt;a target="_blank" rel="nofollow" href="https://opendatahub.io/"&gt;opendatahub-io&lt;/a&gt; GitHub project: &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io/jupyterhub-quickstart"&gt;jupyterhub-quickstart&lt;/a&gt; and &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io/jupyterhub-odh"&gt;jupyterhub-odh&lt;/a&gt;. Moving forward, all code changes and feature enhancements for JupyterHub will go under these two new repositories.&lt;/p&gt; &lt;p&gt;We also streamlined all of the images used by JupyterHub by pulling them from different private and public repositories into two repositories on Quay.io: &lt;a target="_blank" rel="nofollow" href="https://quay.io/organization/odh-jupyterhub"&gt;odh-jupyterhub&lt;/a&gt; and &lt;a target="_blank" rel="nofollow" href="https://quay.io/organization/thoth-station"&gt;thoth-station&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Notebook images are now built and maintained by &lt;a target="_blank" rel="nofollow" href="https://github.com/thoth-station"&gt;Thoth Station&lt;/a&gt;, which is an artificial intelligence (AI) tool that analyzes and recommends software stacks for artificial intelligence applications. For more comprehensive information about Thoth and how to use it, visit &lt;a target="_blank" rel="nofollow" href="https://thoth-station.ninja/"&gt;Thoth Station&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;We&amp;#8217;ve also updated Open Data Hub 0.8 with Elyra, an AI toolkit that lets you launch JupyterLab images.&lt;/p&gt; &lt;h2&gt;From notebooks to pipelines with Elyra&lt;/h2&gt; &lt;p&gt;In an effort to allow data scientists to turn their notebooks into Argo Workflows or Kubeflow pipelines, we&amp;#8217;ve added an exciting new tool called &lt;a target="_blank" rel="nofollow" href="https://github.com/elyra-ai"&gt;Elyra&lt;/a&gt; to Open Data Hub 0.8. The process of converting all of the work that a data scientist has created in notebooks to a production-level pipeline is cumbersome and usually manual. Elyra lets you execute this process from the JupyterLab portal with just a few clicks. As shown in Figure 1, Elyra is now included in a JupyterHub notebook image.&lt;/p&gt; &lt;div id="attachment_778647" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-778647" class="wp-image-778647" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-01-at-8.41.15-AM-300x245.png" alt="A screenshot of the JupyterLab image dialog." width="640" height="523" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-01-at-8.41.15-AM-300x245.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-01-at-8.41.15-AM-768x627.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-01-at-8.41.15-AM.png 972w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-778647" class="wp-caption-text"&gt;Figure 1: Elyra is provided in a JupyterHub image.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The image runs a JupyterLab environment with Elyra tools, as shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_778657" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-778657" class="wp-image-778657 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-01-at-8.43.04-AM-1024x682.png" alt="A screenshot of the JupyterLab environment setup page with the Elyra tools option." width="640" height="426" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-01-at-8.43.04-AM-1024x682.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-01-at-8.43.04-AM-300x200.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-01-at-8.43.04-AM-768x511.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-01-at-8.43.04-AM.png 1185w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-778657" class="wp-caption-text"&gt;Figure 2: A JupyterLab environment with the Elyra tools option.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Look for upcoming articles and documentation about how to use Elyra optimally.&lt;/p&gt; &lt;h2&gt;Monitoring Kubeflow&lt;/h2&gt; &lt;p&gt;As part of our effort to make Kubeflow and Open Data Hub components interchangeable, we&amp;#8217;ve added monitoring capabilities to Kubeflow. With ODH 0.8, users can add Prometheus and Grafana for Kubeflow component monitoring. Currently, not all Kubeflow components support a Prometheus endpoint. We did turn on the Prometheus endpoint in Argo, and we&amp;#8217;ve provided the example dashboard shown in Figure 3, which lets users monitor their pipelines.&lt;/p&gt; &lt;div id="attachment_778667" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-778667" class="wp-image-778667 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-01-at-1.50.12-PM-1024x288.png" alt="A screenshot of the Grafana dashboard monitoring an Argo workflow." width="640" height="180" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-01-at-1.50.12-PM-1024x288.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-01-at-1.50.12-PM-300x84.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-01-at-1.50.12-PM-768x216.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-778667" class="wp-caption-text"&gt;Figure 3: Monitoring the Argo workflow in a Grafana dashboard.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Two Kubeflow components that you can use for monitoring are &lt;code&gt;tfjobs&lt;/code&gt; and &lt;code&gt;pytorchjobs&lt;/code&gt;. To install Kubeflow with monitoring, please use the &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io/odh-manifests/blob/master/kfdef/kfctl_openshift_kubeflow_monitoring.yaml"&gt;Kubeflow-monitoring example Kfdef&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Distributed machine learning&lt;/h2&gt; &lt;p&gt;As a continuation of our previous effort to provide more distributed-learning tools to ODH, the &lt;a target="_blank" rel="nofollow" href="https://github.com/kubeflow/pytorch-operator"&gt;PyTorch Operator&lt;/a&gt; now works with ODH components. To install the PyTorch Operator with ODH, please use the &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io/odh-manifests/blob/master/kfdef/kfctl_openshift_distributed_training.yaml"&gt;distributed-training example Kfdef&lt;/a&gt;. The example also includes the &lt;code&gt;tfjobs&lt;/code&gt; Kubeflow component, which was ported in ODH 0.7. See the ODH documentation for &lt;a target="_blank" rel="nofollow" href="http://opendatahub.io/docs/kubeflow/mixing.html"&gt;more information about mixing components&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;CI/CD&lt;/h2&gt; &lt;p&gt;We added more tests to Open Data Hub components, including &lt;a href="https://developers.redhat.com/topics/kafka-kubernetes"&gt;Apache Kafka&lt;/a&gt; and Superset, and we enhanced JupyterHub testing by adding Selenium for web portal testing. We also added the ability to run these tests in the forked &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io/manifests/"&gt;Kubeflow manifest repository&lt;/a&gt; in our CI pipeline. At the moment, however, the tests only verify the manifests. We need to expand them to include more comprehensive tests such as the ones that we developed for the &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io/odh-manifests"&gt;odh-manifest&lt;/a&gt; repository. The team is also continuing to investigate a continuous deployment and delivery system for a complete and dynamic &lt;a href="https://developers.redhat.com/topics/ci-cd"&gt;CI/CD&lt;/a&gt; pipeline.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Visit &lt;a target="_blank" rel="nofollow" href="https://opendatahub.io/"&gt;opendatahub.io&lt;/a&gt; for the complete Open Data Hub 0.8 documentation. You will find details about specific components in each component&amp;#8217;s GitHub section. We&amp;#8217;ve also added &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io/odh-manifests/tree/master/tests"&gt;new guidelines to develop and run test suites&lt;/a&gt; locally via a container against an existing cluster, which makes development easier. This method mirrors what is actually running in our CI system, so it is a more useful method for debugging.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fkubeflow-1-0-monitoring-and-enhanced-jupyterhub-builds-in-open-data-hub-0-8%2F&amp;#38;linkname=Kubeflow%201.0%20monitoring%20and%20enhanced%20JupyterHub%20builds%20in%20Open%20Data%20Hub%200.8" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fkubeflow-1-0-monitoring-and-enhanced-jupyterhub-builds-in-open-data-hub-0-8%2F&amp;#38;linkname=Kubeflow%201.0%20monitoring%20and%20enhanced%20JupyterHub%20builds%20in%20Open%20Data%20Hub%200.8" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fkubeflow-1-0-monitoring-and-enhanced-jupyterhub-builds-in-open-data-hub-0-8%2F&amp;#38;linkname=Kubeflow%201.0%20monitoring%20and%20enhanced%20JupyterHub%20builds%20in%20Open%20Data%20Hub%200.8" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fkubeflow-1-0-monitoring-and-enhanced-jupyterhub-builds-in-open-data-hub-0-8%2F&amp;#38;linkname=Kubeflow%201.0%20monitoring%20and%20enhanced%20JupyterHub%20builds%20in%20Open%20Data%20Hub%200.8" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fkubeflow-1-0-monitoring-and-enhanced-jupyterhub-builds-in-open-data-hub-0-8%2F&amp;#38;linkname=Kubeflow%201.0%20monitoring%20and%20enhanced%20JupyterHub%20builds%20in%20Open%20Data%20Hub%200.8" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fkubeflow-1-0-monitoring-and-enhanced-jupyterhub-builds-in-open-data-hub-0-8%2F&amp;#38;linkname=Kubeflow%201.0%20monitoring%20and%20enhanced%20JupyterHub%20builds%20in%20Open%20Data%20Hub%200.8" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fkubeflow-1-0-monitoring-and-enhanced-jupyterhub-builds-in-open-data-hub-0-8%2F&amp;#38;linkname=Kubeflow%201.0%20monitoring%20and%20enhanced%20JupyterHub%20builds%20in%20Open%20Data%20Hub%200.8" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F18%2Fkubeflow-1-0-monitoring-and-enhanced-jupyterhub-builds-in-open-data-hub-0-8%2F&amp;#038;title=Kubeflow%201.0%20monitoring%20and%20enhanced%20JupyterHub%20builds%20in%20Open%20Data%20Hub%200.8" data-a2a-url="https://developers.redhat.com/blog/2020/09/18/kubeflow-1-0-monitoring-and-enhanced-jupyterhub-builds-in-open-data-hub-0-8/" data-a2a-title="Kubeflow 1.0 monitoring and enhanced JupyterHub builds in Open Data Hub 0.8"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/09/18/kubeflow-1-0-monitoring-and-enhanced-jupyterhub-builds-in-open-data-hub-0-8/"&gt;Kubeflow 1.0 monitoring and enhanced JupyterHub builds in Open Data Hub 0.8&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/YnmDLJc6Js8" height="1" width="1" alt=""/&gt;</content><summary>The new Open Data Hub version 0.8 (ODH) release includes many new features, continuous integration (CI) additions, and documentation updates. For this release, we focused on enhancing JupyterHub image builds, enabling more mixing of Open Data Hub and Kubeflow components, and designing our comprehensive end-to-end continuous integration and continuous deployment and delivery (CI/CD) process. In thi...</summary><dc:creator>Juana Nakfour</dc:creator><dc:date>2020-09-18T07:00:17Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/09/18/kubeflow-1-0-monitoring-and-enhanced-jupyterhub-builds-in-open-data-hub-0-8/</feedburner:origLink></entry><entry><title>How to switch Red Hat OpenShift Virtualization from hardware virtualization to software emulation</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/59tci0iMbys/" /><category term="Containers" scheme="searchisko:content:tags" /><category term="devops" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="hardware virtualization" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="KubeVirt" scheme="searchisko:content:tags" /><category term="linux" scheme="searchisko:content:tags" /><category term="network emulation" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="operator" scheme="searchisko:content:tags" /><category term="qemu kvm" scheme="searchisko:content:tags" /><category term="software virtualization" scheme="searchisko:content:tags" /><author><name>Bryant Son</name></author><id>searchisko:content:id:jbossorg_blog-how_to_switch_red_hat_openshift_virtualization_from_hardware_virtualization_to_software_emulation</id><updated>2020-09-17T07:00:30Z</updated><published>2020-09-17T07:00:30Z</published><content type="html">&lt;p&gt;&lt;a target="_blank" rel="nofollow" href="https://www.openshift.com/blog/blog-openshift-virtualization-whats-new-with-virtualization-from-red-hat"&gt;OpenShift Virtualization&lt;/a&gt; is a feature of &lt;a href="https://developers.redhat.com/products/openshift/getting-started"&gt;Red Hat OpenShift Container Platform&lt;/a&gt; (OCP) and &lt;a target="_blank" rel="nofollow" href="https://www.openshift.com/products/kubernetes-engine"&gt;OpenShift Kubernetes Engine&lt;/a&gt; that allows you to run and manage virtual machine workloads alongside container workloads. Based on the open source project &lt;a target="_blank" rel="nofollow" href="https://kubevirt.io/"&gt;KubeVirt&lt;/a&gt;, the goal of OpenShift Virtualization is to help enterprises move from a VM-based infrastructure to a &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/resources/developer-guide-lift-and-shift-cloud-migration"&gt;Kubernetes-and-container-based stack&lt;/a&gt;, one application at a time.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/2020/08/28/enable-openshift-virtualization-on-red-hat-openshift/"&gt;In my previous article&lt;/a&gt;, I showed you how to set up and enable OpenShift Virtualization running on &lt;a target="_blank" rel="nofollow" href="https://aws.amazon.com/ec2/"&gt;Amazon Web Services Elastic Compute Cloud&lt;/a&gt; (AWS EC2). In that article, I noted that OpenShift Virtualization looks for hardware virtualization by default, which requires a &lt;a target="_blank" rel="nofollow" href="https://en.wikipedia.org/wiki/Bare-metal_server"&gt;bare-metal server&lt;/a&gt; instance. If you are running OpenShift on AWS EC2, as I do, then you have to enable software emulation over the default hardware virtualization. Otherwise, you need a bare-metal instance from the public cloud provider or a pure bare-metal solution.&lt;/p&gt; &lt;p&gt;In this article, I show you how to switch OpenShift Virtualization from its default of hardware virtualization to &lt;a target="_blank" rel="nofollow" href="https://www.qemu.org/"&gt;QEMU&lt;/a&gt;-based software emulation. You will then be able to start and operate a virtual machine through OpenShift Virtualization, even in a non-bare metal instance such as AWS EC2.&lt;/p&gt; &lt;p&gt;&lt;span id="more-742637"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Hardware versus software virtualization&lt;/h2&gt; &lt;p&gt;By default, OpenShift Virtualization uses the &lt;a target="_blank" rel="nofollow" href="https://www.linux-kvm.org/page/Main_Page"&gt;Linux Kernel Virtual Machine&lt;/a&gt; (KVM), which is a full-virtualization solution for Linux on x86 hardware. KVM uses the virtualization extensions Intel VT or AMD-V to enable device emulation.&lt;/p&gt; &lt;p&gt;For performance reasons, hardware virtualization, where the virtual machine uses the hardware directly, is almost always preferable over software virtualization in real-world implementations. Modern CPUs, memory, and hardware components are designed with hardware virtualization in mind. However, hardware virtualization is not always available, especially because it requires a bare-metal instance (physical server) to work as opposed to the approach taken by virtual servers that use cloud computing or shared hardware.&lt;/p&gt; &lt;p&gt;As an example, the default AWS EC2 uses KVM for &lt;a target="_blank" rel="nofollow" href="https://aws.amazon.com/ec2/nitro/#:~:text=The%20AWS%20Nitro%20System%20is,re%2Dimagined%20our%20virtualization%20infrastructure."&gt;AWS Nitro System&lt;/a&gt;-based instance types but does not expose &lt;a target="_blank" rel="nofollow" href="https://www.datto.com/library/what-is-hyper-v-nested-virtualization"&gt;nested virtualization&lt;/a&gt;, where one virtualized environment runs inside another one. Unless it is a pure bare-metal server, nested virtualization is a work-around, though OpenShift Virtualization can use the popular open source machine emulator and virtualizer, &lt;a target="_blank" rel="nofollow" href="https://wiki.qemu.org/"&gt;QEMU&lt;/a&gt; with its &lt;a target="_blank" rel="nofollow" href="https://wiki.qemu.org/Documentation/TCG"&gt;Tiny Code Generator (TCG)&lt;/a&gt; to set this configuration up in AWS EC2.&lt;/p&gt; &lt;p&gt;If you tried to start a virtual machine running on OpenShift on top of AWS EC2 and provisioned with OpenShift Virtualization, using the default hardware emulation in a non-bare-metal instance would fail. In that case, you would see a pod error when you tried to start the new virtual machine, as shown in Figure 1.&lt;/p&gt; &lt;div id="attachment_742647" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.14.16-AM.png"&gt;&lt;img aria-describedby="caption-attachment-742647" class="wp-image-742647 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.14.16-AM-1024x306.png" alt="A screenshot of the OpenShift web console indicating pod failure with the error message &amp;#34;0/6 nodes are available: 1 insufficient devices.kubevirt.io/vhost-net.&amp;#34;" width="640" height="191" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.14.16-AM-1024x306.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.14.16-AM-300x90.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.14.16-AM-768x230.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-742647" class="wp-caption-text"&gt;Figure 1: A virtual machine started with OpenShift Virtualization fails if the default hardware emulation is used in a non-bare-metal instance.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The error message in Figure 1 reads, &amp;#8220;0/6 nodes are available: 1 insufficient devices.kubevirt.io/vhost-net.&amp;#8221; Receiving such an error in Red Hat OpenShift usually suggests that you need to adjust your OpenShift resource limits such as the quota, limit-range, or instance-node capacities. With OpenShift Virtualization, the first question you have to ask is whether your OpenShift instance &lt;i&gt;is or is not&lt;/i&gt; running on a bare-metal server.&lt;/p&gt; &lt;p&gt;Unless you are able to provision Red Hat OpenShift on a bare-metal instance, this approach is only meant for sandbox and testing environments. Running VMs through OpenShift Virtualization&amp;#8217;s software emulation method can result in performance degradation—which can be fixed by later switching back to hardware virtualization. &lt;em&gt;Software emulation&lt;/em&gt; is the process of artificially executing code intended for a &amp;#8220;foreign&amp;#8221; architecture and hardware profile by converting it to the assembly language that the CPU in use understands. Luckily for us, KVM provides an easier way to switch to software emulation, based on the popular open source machine emulator and virtualizer, QEMU.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: See &lt;a target="_blank" rel="nofollow" href="http://jpc.sourceforge.net/oldsite/Emulation.html"&gt;the difference between virtualization and emulation&lt;/a&gt; to better understand the difference between hardware virtualization and software emulation.&lt;/p&gt; &lt;h2&gt;Prerequisites&lt;/h2&gt; &lt;p&gt;By following the examples in this article, you will learn how to switch your OpenShift container-native virtualization configuration from the default of hardware virtualization to software emulation. All it takes is changing one property field—it really is that easy. To follow the instructions, you must meet the following prerequisites in your development environment:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Have Red Hat OpenShift 4.4 installed on a non-bare-metal instance like AWS EC2.&lt;/li&gt; &lt;li&gt;Have OpenShift Virtualization enabled and available in the default namespace, &lt;code&gt;openshift-cnv&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: See my &lt;a&gt;previous article&lt;/a&gt; for a guide to enabling OpenShift Virtualization.&lt;/p&gt; &lt;h2&gt;Step 1: Locate kubevirt-config in openshift-cnv&lt;/h2&gt; &lt;p&gt;Our first step is to locate the &lt;code&gt;ConfigMap&lt;/code&gt; called &lt;code&gt;kubevirt-config&lt;/code&gt;, which we will use to switch the default hardware virtualization mechanism to software emulation. The &lt;code&gt;kubevirt-config&lt;/code&gt; file is located in the default OpenShift Virtualization namespace, &lt;code&gt;openshift-cnv&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If you are using an OpenShift CLI, open the OpenShift Virtualization project with the command &lt;code&gt;oc project openshift-cnv&lt;/code&gt;. Then, use &lt;code&gt;oc get cm&lt;/code&gt; to locate &lt;code&gt;kubevirt-config&lt;/code&gt;, as shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_742667" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.26.44-AM-1.png"&gt;&lt;img aria-describedby="caption-attachment-742667" class="wp-image-742667 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.26.44-AM-1-1024x661.png" alt="A screenshot of the OpenShift CLI with the &amp;#34;kubevirt-config&amp;#34; file listed." width="640" height="413" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.26.44-AM-1-1024x661.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.26.44-AM-1-300x194.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.26.44-AM-1-768x495.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-742667" class="wp-caption-text"&gt;Figure 2: Use the OpenShift CLI to locate the &lt;code&gt;kubevirt-config&lt;/code&gt; file.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Another option is to use OpenShift&amp;#8217;s web console to locate the &lt;code&gt;ConfigMap&lt;/code&gt;. Make sure that you are in the &lt;code&gt;openshift-cnv&lt;/code&gt; namespace, then click &lt;strong&gt;Workloads -&amp;#62; Config Map&lt;/strong&gt;, as shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_742677" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.27.04-AM.png"&gt;&lt;img aria-describedby="caption-attachment-742677" class="wp-image-742677 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.27.04-AM-1024x556.png" alt="A screenshot of the kubevirt-config file in the OpenShift web console." width="640" height="348" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.27.04-AM-1024x556.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.27.04-AM-300x163.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.27.04-AM-768x417.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-742677" class="wp-caption-text"&gt;Figure 3: Locate &lt;code&gt;kubevirt-config&lt;/code&gt; in OpenShift&amp;#8217;s web console.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Click &lt;b&gt;ConfigMap &lt;/b&gt;to view the YAML file for &lt;code&gt;kubevirt-config&lt;/code&gt;, which is shown in Figure 4.&lt;/p&gt; &lt;div id="attachment_742687" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.27.14-AM.png"&gt;&lt;img aria-describedby="caption-attachment-742687" class="wp-image-742687 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.27.14-AM-1024x559.png" alt="A screenshot of the YAML configuration file for kubevirt-config in the web console." width="640" height="349" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.27.14-AM-1024x559.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.27.14-AM-300x164.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.27.14-AM-768x419.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-742687" class="wp-caption-text"&gt;Figure 4: The YAML file for the &lt;code&gt;kubevirt-config&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Step 2: Update the kubevirt-config file for software emulation&lt;/h2&gt; &lt;p&gt;Once you locate the &lt;code&gt;kubevirt-config&lt;/code&gt; file, all you have to do is to add a new property to the file, instructing OpenShift Virtualization to use software emulation rather than hardware virtualization. If you are using an OpenShift CLI, you can execute &lt;code&gt;oc edit cm/kubevirt-config&lt;/code&gt; to edit the ConfigMap, as shown in Figure 5.&lt;/p&gt; &lt;div id="attachment_742697" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.28.07-AM.png"&gt;&lt;img aria-describedby="caption-attachment-742697" class="wp-image-742697 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.28.07-AM-1024x463.png" alt="A screenshot of the command &amp;#34;oc edit cm kubevirt-config&amp;#34; in the CLI." width="640" height="289" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.28.07-AM-1024x463.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.28.07-AM-300x136.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.28.07-AM-768x347.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-742697" class="wp-caption-text"&gt;Figure 5: Execute &lt;code&gt;oc edit cm kubevirt-config&lt;/code&gt; to modify the ConfigMap in the CLI.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Once you are inside the ConfigMap&amp;#8217;s YAML file, add a new property called &lt;code&gt;debug.useEmulation&lt;/code&gt; under &lt;code&gt;data&lt;/code&gt;, then set the value to &lt;code&gt;true&lt;/code&gt;, as shown in Figure 6.&lt;/p&gt; &lt;div id="attachment_742707" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.28.57-AM.png"&gt;&lt;img aria-describedby="caption-attachment-742707" class="wp-image-742707 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.28.57-AM-1024x477.png" alt="A screenshot of the CLI with the new property &amp;#34;debug.useEmulation&amp;#34; added." width="640" height="298" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.28.57-AM-1024x477.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.28.57-AM-300x140.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.28.57-AM-768x358.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-742707" class="wp-caption-text"&gt;Figure 6: Add the new property &lt;code&gt;debug.useEmulation&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;When you are done with these changes, save the file. That&amp;#8217;s all there to it! The CNV Operator automatically fetches the &lt;code&gt;ConfigMap&lt;/code&gt; and applies the change.&lt;/p&gt; &lt;h2&gt;Step 3: Start the virtual machine using software emulation&lt;/h2&gt; &lt;p&gt;Before we finish, let&amp;#8217;s test the change to software emulation. Return to the default CNV project namespace and create a new virtual machine. You should not see the previous error; instead, you should see that the VM is starting, as shown in Figure 7.&lt;/p&gt; &lt;div id="attachment_742717" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.31.47-AM.png"&gt;&lt;img aria-describedby="caption-attachment-742717" class="wp-image-742717 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.31.47-AM-1024x558.png" alt="A screenshot of the OpenShift console showing that the VM is atarting." width="640" height="349" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.31.47-AM-1024x558.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.31.47-AM-300x163.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.31.47-AM-768x419.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-742717" class="wp-caption-text"&gt;Figure 7: Confirmation that the virtual machine is starting.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;As shown in Figure 8, the virtual machine&amp;#8217;s status will change to &lt;code&gt;running&lt;/code&gt;.&lt;/p&gt; &lt;div id="attachment_742727" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.35.37-AM.png"&gt;&lt;img aria-describedby="caption-attachment-742727" class="wp-image-742727 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.35.37-AM-1024x559.png" alt="A screenshot of the OpenShift console showing that the VM is running." width="640" height="349" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.35.37-AM-1024x559.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.35.37-AM-300x164.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.35.37-AM-768x419.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-742727" class="wp-caption-text"&gt;Figure 8: Confirmation that the VM is running.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You can also see that the server has successfully started through the OpenShift web console screen, as shown in Figure 9. Alternatively, you could use KubeVirt&amp;#8217;s &lt;a target="_blank" rel="nofollow" href="https://docs.openshift.com/container-platform/4.2/cnv/cnv_install/cnv-installing-virtctl.html"&gt;virtctl&lt;/a&gt; tool (which I introduced in my previous article) to connect to the VM.&lt;/p&gt; &lt;div id="attachment_742737" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.36.11-AM.png"&gt;&lt;img aria-describedby="caption-attachment-742737" class="wp-image-742737 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.36.11-AM-1024x577.png" alt="A screenshot of the OpenShift console view to monitor the new virtual machine." width="640" height="361" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.36.11-AM-1024x577.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.36.11-AM-300x169.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-28-at-11.36.11-AM-768x433.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-742737" class="wp-caption-text"&gt;Figure 9: Monitor the new virtual machine in OpenShift&amp;#8217;s web console.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;That is it! I hope this discussion and short guide have helped you understand how to switch from OpenShift Virtualization&amp;#8217;s default of hardware virtualization to QEMU-based software emulation. By following the instructions in this article, you can easily operate a virtual machine with OpenShift Virtualization, even in non-bare metal instances such as AWS EC2.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F17%2Fhow-to-switch-red-hat-openshift-virtualization-from-hardware-virtualization-to-software-emulation%2F&amp;#38;linkname=How%20to%20switch%20Red%20Hat%20OpenShift%20Virtualization%20from%20hardware%20virtualization%20to%20software%20emulation" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F17%2Fhow-to-switch-red-hat-openshift-virtualization-from-hardware-virtualization-to-software-emulation%2F&amp;#38;linkname=How%20to%20switch%20Red%20Hat%20OpenShift%20Virtualization%20from%20hardware%20virtualization%20to%20software%20emulation" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F17%2Fhow-to-switch-red-hat-openshift-virtualization-from-hardware-virtualization-to-software-emulation%2F&amp;#38;linkname=How%20to%20switch%20Red%20Hat%20OpenShift%20Virtualization%20from%20hardware%20virtualization%20to%20software%20emulation" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F17%2Fhow-to-switch-red-hat-openshift-virtualization-from-hardware-virtualization-to-software-emulation%2F&amp;#38;linkname=How%20to%20switch%20Red%20Hat%20OpenShift%20Virtualization%20from%20hardware%20virtualization%20to%20software%20emulation" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F17%2Fhow-to-switch-red-hat-openshift-virtualization-from-hardware-virtualization-to-software-emulation%2F&amp;#38;linkname=How%20to%20switch%20Red%20Hat%20OpenShift%20Virtualization%20from%20hardware%20virtualization%20to%20software%20emulation" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F17%2Fhow-to-switch-red-hat-openshift-virtualization-from-hardware-virtualization-to-software-emulation%2F&amp;#38;linkname=How%20to%20switch%20Red%20Hat%20OpenShift%20Virtualization%20from%20hardware%20virtualization%20to%20software%20emulation" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F17%2Fhow-to-switch-red-hat-openshift-virtualization-from-hardware-virtualization-to-software-emulation%2F&amp;#38;linkname=How%20to%20switch%20Red%20Hat%20OpenShift%20Virtualization%20from%20hardware%20virtualization%20to%20software%20emulation" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F17%2Fhow-to-switch-red-hat-openshift-virtualization-from-hardware-virtualization-to-software-emulation%2F&amp;#038;title=How%20to%20switch%20Red%20Hat%20OpenShift%20Virtualization%20from%20hardware%20virtualization%20to%20software%20emulation" data-a2a-url="https://developers.redhat.com/blog/2020/09/17/how-to-switch-red-hat-openshift-virtualization-from-hardware-virtualization-to-software-emulation/" data-a2a-title="How to switch Red Hat OpenShift Virtualization from hardware virtualization to software emulation"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/09/17/how-to-switch-red-hat-openshift-virtualization-from-hardware-virtualization-to-software-emulation/"&gt;How to switch Red Hat OpenShift Virtualization from hardware virtualization to software emulation&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/59tci0iMbys" height="1" width="1" alt=""/&gt;</content><summary>OpenShift Virtualization is a feature of Red Hat OpenShift Container Platform (OCP) and OpenShift Kubernetes Engine that allows you to run and manage virtual machine workloads alongside container workloads. Based on the open source project KubeVirt, the goal of OpenShift Virtualization is to help enterprises move from a VM-based infrastructure to a Kubernetes-and-container-based stack, one applica...</summary><dc:creator>Bryant Son</dc:creator><dc:date>2020-09-17T07:00:30Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/09/17/how-to-switch-red-hat-openshift-virtualization-from-hardware-virtualization-to-software-emulation/</feedburner:origLink></entry><entry><title>Payments Architecture - Common Architecture Elements</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/4KCtwc5QDXE/payments-architecture-common-elements.html" /><category term="Architecture Blueprints" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="Decision Manager" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="JBossAMQ" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-payments_architecture_common_architecture_elements</id><updated>2020-09-17T15:03:00Z</updated><published>2020-09-17T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-NhImz2b--gU/X1jsrXrG_jI/AAAAAAAAxeI/2I4wj4AD4YUcuxWk1-464UVs5OiejZFwQCNcBGAsYHQ/s1600/christiann-koepke-0jPuWm8_9wY-unsplash.jpg" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="financial payments architecture" border="0" data-original-height="1067" data-original-width="1600" height="213" src="https://1.bp.blogspot.com/-NhImz2b--gU/X1jsrXrG_jI/AAAAAAAAxeI/2I4wj4AD4YUcuxWk1-464UVs5OiejZFwQCNcBGAsYHQ/s320/christiann-koepke-0jPuWm8_9wY-unsplash.jpg" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="font-size: 12.8px; text-align: center;"&gt;Part 2 - Common architectural elements&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Cloud technology is changing the way payment services are architectured. In this series we will be presenting insight from our customers on adopting open source and cloud technology to modernize their payment service.&lt;br /&gt;&lt;br /&gt;So far we've presented research-based architectural blueprints of&amp;nbsp;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-introduction.html" target="_blank"&gt;omnichannel customer experience&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.schabell.org/2020/01/integrating-saas-applications-an-introduction.html" target="_blank"&gt;integrating with SaaS applications&lt;/a&gt;, and&amp;nbsp;&lt;a href="https://www.schabell.org/2020/05/cloud-native-development-a-blueprint.html" target="_blank"&gt;cloud-native development solutions&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;In &lt;a href="https://www.schabell.org/2020/09/financial-payments-architecture-an-introduction.html" target="_blank"&gt;part one of this series&lt;/a&gt; we introduced the concept of an architecture blueprint and shared the planning for this series to cover the logical, physical, and details of the solution.&lt;br /&gt;&lt;br /&gt;In this article we'll explore the logical diagram that captures the elements of a successful payments solution.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;From specific to generic&lt;/h3&gt;Before diving in to the common elements, it might be nice to understand that this is not a catch all for every possible payments solution. It's a collection of identified elements uncovered in multiple, from two to three, customer implementations. These elements presented here are then the generic common architectural elements identified and collected into the generic architectural blueprint.&lt;br /&gt;&lt;br /&gt;It's our intent to provide a blueprint that provides guidance and not deep technical details. You're smart enough to figure out wiring integration points in your own architecture. You're capable of slotting in the technologies and components you've committed to in the past where applicable.&lt;br /&gt;&lt;br /&gt;It's our goal to describe the architectural blueprint generic components and outline a few specific cases with visual diagrams so that you're able to make the right decisions from the start of your integration projects.&lt;br /&gt;&lt;br /&gt;Feel free to post comments at the bottom of this post, or contact me directly with your feedback.&lt;br /&gt;&lt;br /&gt;Now let's take a quick tour of the generic architecture and outline the common elements uncovered in my research. The first diagram you'll meet in this series provides a logical view of the solution elements. These elements are grouped for easier understanding and we'll cover each one.&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;&lt;a href="https://1.bp.blogspot.com/-0MAIznw36wU/X1tHmbwdVsI/AAAAAAAAxew/xdw_Vtu9kLgicZ_O7b6a-SXW_SvMMxoigCNcBGAsYHQ/s1600/fsi-external-apps.png" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="financial payments architecture" border="0" data-original-height="792" data-original-width="1035" height="152" src="https://1.bp.blogspot.com/-0MAIznw36wU/X1tHmbwdVsI/AAAAAAAAxew/xdw_Vtu9kLgicZ_O7b6a-SXW_SvMMxoigCNcBGAsYHQ/s200/fsi-external-apps.png" title="" width="200" /&gt;&lt;/a&gt;External applications&lt;/h3&gt;&lt;div&gt;Starting at the top left of this diagram, there are two elements that represent external applications that interact with the architecture. Distilling the various applications discovered in customer solution research, we've come up with two common representations.&lt;br /&gt;&lt;br /&gt;The first is mobile applications, covering basically everything that customers use to interact directly with a company. This can be mobile applications deployed by the company themselves or developed by third party organizations to interact with the services offered.&lt;br /&gt;&lt;br /&gt;The second is web applications, a broad element to contain all other types of applications, web sites and/or services that are deployed by the company or any third party organizations to interact with the services offered.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;h3 style="text-align: left;"&gt;Container platform&lt;/h3&gt;&lt;div&gt;&lt;div&gt;Without a doubt, organizations engaged in modernizing their payments offerings have seen the value of containers and container platforms. The container platform provides for one consistent environment for developers and operations to manage services, applications, integration points, process integration, and security.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://1.bp.blogspot.com/-t_GP_pfkIt8/X1uCf4ZwpSI/AAAAAAAAxfk/1A7zhUbUJnkfHsvogASIGersc09p4rRnACNcBGAsYHQ/s1600/part1.png" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="financial payments architecture" border="0" data-original-height="1293" data-original-width="1600" height="258" src="https://1.bp.blogspot.com/-t_GP_pfkIt8/X1uCf4ZwpSI/AAAAAAAAxfk/1A7zhUbUJnkfHsvogASIGersc09p4rRnACNcBGAsYHQ/s320/part1.png" title="" width="320" /&gt;&lt;/a&gt;It's also the one way to ensure you can uniformly leverage the same container infrastructure across any cloud environment. It avoids becoming locked into any private or cloud platform as you have an exit strategy with a container platform that's consistent across your architecture.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The security aspect is interwoven in the container platform, as each container service, application, or process integration can be plugged in to an organization's authentication and authorization mechanisms.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Within this view of the container platform there are elements grouping general microservices (validation, integration, integration data, and caching) that offer integration with an organization's often existing service offerings.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;For payments processing you'll notice that there are more specific elements associated with microservices dedicated to payments activities (clearing, fraud detection, anti-money laundering (AML), and payment exception management). These tend to be part of the financial industry requirements and can be specific to the region of operation.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Finally, there are elements that are prolific across the landscape of microservices, such as API management and single-sign-on (SSO) technologies used by one and all.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;h3 style="text-align: left;"&gt;Infrastructure services&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;While the infrastructure services might not be where you would expect to find event streaming elements for payments solutions, we've found that putting that extra emphasis on it was necessary.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://1.bp.blogspot.com/-iqx7yJC7Yf8/X1tJxIo9Y_I/AAAAAAAAxfE/E4YQYLndTKYc5HRdb_U2PUMDTbPVCE7cgCNcBGAsYHQ/s1600/fsi-infra-services.png" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="financial payments architecture" border="0" data-original-height="477" data-original-width="1032" height="91" src="https://1.bp.blogspot.com/-iqx7yJC7Yf8/X1tJxIo9Y_I/AAAAAAAAxfE/E4YQYLndTKYc5HRdb_U2PUMDTbPVCE7cgCNcBGAsYHQ/s200/fsi-infra-services.png" title="" width="200" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;This element is core to the solutions researched and found to be the design mechanism most often mentioned, that of Event Driven Architecture (EDA). Data streams are the backbone of processing payments and were used extensively to manage a customer's payment request from validation, fraud &amp;amp; AML checks, clearing, to finally routing the payment request. More on this in later articles in this series, but the foundation is clearly on managing the flow of data through events and messaging.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;If you need a background on EDA, take some time and explore&amp;nbsp;&lt;a href="https://www.schabell.org/2020/04/demystifying-event-driven-architecture-an-introduction.html" target="_blank"&gt;Demystifying the Event Driven Architecture&lt;/a&gt;.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;h3 style="text-align: left;"&gt;External systems&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://1.bp.blogspot.com/-evI3QNctdxg/X1tLb8S2YFI/AAAAAAAAxfQ/jjHW4CliZ6cMpwxTZ6pLhvchar4CI18OQCNcBGAsYHQ/s1600/fsi-external-systems.png" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="https://www.schabell.org/2020/04/demystifying-event-driven-architecture-an-introduction.html" border="0" data-original-height="1542" data-original-width="1065" height="320" src="https://1.bp.blogspot.com/-evI3QNctdxg/X1tLb8S2YFI/AAAAAAAAxfQ/jjHW4CliZ6cMpwxTZ6pLhvchar4CI18OQCNcBGAsYHQ/s320/fsi-external-systems.png" title="" width="220" /&gt;&lt;/a&gt;These elements capture the existence of regional or local needs for using clearing, compliance, reconciliation, payment networks, and other financial systems. They are not always under control of the organization or if they are, can often be externalized behind API access or private cloud access points.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;It's important to understand that some of the solutions for payments involve accessing systems that are not in the control of the payment solution organization and require architectural attention to ensure robust and clean interactions.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;h3 style="text-align: left;"&gt;Hybrid cloud infrastructure&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;This element is the infrastructure layer that indicates the possibility of this solution riding on everything from a private data center, a private cloud, a public cloud, or a combined multicloud infrastructure. Note that it can be a single solution for deployment or any combination of private or public cloud deployments.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;h3 style="text-align: left;"&gt;Storage services&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;The storage services uncovered in customer solution research were diverse and numerous. For that reason there is no single common architectural element shown at the highest level. Everything from container native storage to traditional block storage can be found in successful solutions.&lt;/div&gt;&lt;br /&gt;This completes our overview of the common generic elements that make up our architecture blueprint for payments.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Project examples&lt;/h3&gt;&lt;div&gt;Sharing the process results for our payments blueprint is what this series is about, but there are project artifacts and diagrams that can also be shared with you, the reader. We've pulled together an&amp;nbsp;&lt;a href="https://gitlab.com/redhatdemocentral/portfolio-architecture-examples" target="_blank"&gt;examples repository&lt;/a&gt;&amp;nbsp;for all our architecture blueprint diagrams.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;The&amp;nbsp;&lt;a href="https://gitlab.com/redhatdemocentral/portfolio-architecture-examples" target="_blank"&gt;Portfolio Architecture Examples&lt;/a&gt;&amp;nbsp;repository makes it possible to collect and share individual images from each diagram element as well as the entire project as a whole.&lt;br /&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-i_SVtZGsp_8/X2CUj63GWWI/AAAAAAAAxfw/9QWtx2SU6Ec90MlPParq5k74F_AEA5UNgCNcBGAsYHQ/s1600/Screenshot%2B2020-09-15%2Bat%2B12.16.21.png" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="financial payments architecture" border="0" data-original-height="224" data-original-width="367" height="195" src="https://1.bp.blogspot.com/-i_SVtZGsp_8/X2CUj63GWWI/AAAAAAAAxfw/9QWtx2SU6Ec90MlPParq5k74F_AEA5UNgCNcBGAsYHQ/s320/Screenshot%2B2020-09-15%2Bat%2B12.16.21.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Figure 1 - logical diagrams in example repository.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;For example, if you scroll down to the file listings on the main page, you can locate a logical diagram as shown in figure 1.&lt;br /&gt;&lt;br /&gt;This is the collection for the logical diagrams associated with payments:&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;in this case it's a single image you can click to view&lt;/li&gt;&lt;li&gt;a project file you can download to your local machine using the&amp;nbsp;&lt;i&gt;Download Diagram&lt;/i&gt;&amp;nbsp;link&lt;/li&gt;&lt;li&gt;a&amp;nbsp;&lt;i&gt;Load Diagram&lt;/i&gt;&amp;nbsp;link that you can &lt;a href="https://redhatdemocentral.gitlab.io/portfolio-architecture-tooling/index.html?#/portfolio-architecture-examples/projects/logical-diagrams-payments.drawio" target="_blank"&gt;click to automatically open the project diagrams&lt;/a&gt; in the diagram tooling used in this blueprint (use private or incognito browser mode to avoid caching issues and a smoother tooling experience)&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;Give it a try and feel free to explore the collection of logical, schematic, detailed, solution, and community diagrams. This should allow you to get started much quicker than from scratch if you can kick-start a project with existing diagrams.&lt;br /&gt;&lt;br /&gt;Should you desire to start designing your own diagrams, please contribute the project file (ending in .drawio) by raising an issue with the file attached. We'd love to continue collecting these projects for others to use.&lt;br /&gt;&lt;br /&gt;Finally, there is a free online&amp;nbsp;&lt;a href="https://redhatdemocentral.gitlab.io/portfolio-architecture-workshops" target="_blank"&gt;beginners guide workshop&lt;/a&gt;&amp;nbsp;available focused on using diagram tooling, please explore to learn tips and tricks from the experts.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;What's next&lt;/h3&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;An overview of the series on the payments portfolio architecture blueprint can be found here:&lt;br /&gt;&lt;ol style="text-align: left;"&gt;&lt;li&gt;&lt;a href="https://www.schabell.org/2020/09/financial-payments-architecture-an-introduction.html" target="_blank"&gt;An introduction&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.schabell.org/2020/09/financial-payments-architecture-common-elements.html" target="_blank"&gt;Common architecture elements&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Immediate payments example&lt;/li&gt;&lt;li&gt;Anti-money laundering example&lt;/li&gt;&lt;li&gt;Fraud detection example&lt;/li&gt;&lt;li&gt;Financial calculations example&lt;/li&gt;&lt;/ol&gt;Catch up on any articles you missed by following one of the links above.&lt;br /&gt;&lt;br /&gt;Next in this series, taking a look at the&amp;nbsp;generic&amp;nbsp;&lt;i&gt;immediate payments example&lt;/i&gt;&amp;nbsp;in a cloud-native architecture focused on payment processing.&lt;br /&gt;&lt;br /&gt;(Article co-authored by&amp;nbsp;&lt;a href="https://www.linkedin.com/in/ramonv/?originalSubdomain=uk" target="_blank"&gt;Ramon Villarreal&lt;/a&gt;)&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=YAN4COsVAX0:hXs9v2OfZnY:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=YAN4COsVAX0:hXs9v2OfZnY:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=YAN4COsVAX0:hXs9v2OfZnY:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=YAN4COsVAX0:hXs9v2OfZnY:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=YAN4COsVAX0:hXs9v2OfZnY:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=YAN4COsVAX0:hXs9v2OfZnY:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=YAN4COsVAX0:hXs9v2OfZnY:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=YAN4COsVAX0:hXs9v2OfZnY:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=YAN4COsVAX0:hXs9v2OfZnY:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=YAN4COsVAX0:hXs9v2OfZnY:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=YAN4COsVAX0:hXs9v2OfZnY:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/YAN4COsVAX0" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/4KCtwc5QDXE" height="1" width="1" alt=""/&gt;</content><summary>Part 2 - Common architectural elementsCloud technology is changing the way payment services are architectured. In this series we will be presenting insight from our customers on adopting open source and cloud technology to modernize their payment service. So far we've presented research-based architectural blueprints of omnichannel customer experience, integrating with SaaS applications, and cloud...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2020-09-17T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/YAN4COsVAX0/payments-architecture-common-elements.html</feedburner:origLink></entry><entry><title>Using OpenAPI with .NET Core</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/2WFWQmVJCSs/" /><category term=".net" scheme="searchisko:content:tags" /><category term=".NET Core" scheme="searchisko:content:tags" /><category term="ASP.NET Core" scheme="searchisko:content:tags" /><category term="C#" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="linux" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="OpenAPI" scheme="searchisko:content:tags" /><category term="RESTful API" scheme="searchisko:content:tags" /><category term="swagger ui" scheme="searchisko:content:tags" /><author><name>Tom Deseyn</name></author><id>searchisko:content:id:jbossorg_blog-using_openapi_with_net_core</id><updated>2020-09-16T07:00:31Z</updated><published>2020-09-16T07:00:31Z</published><content type="html">&lt;p&gt;In this article, we&amp;#8217;ll look at using &lt;a target="_blank" rel="nofollow" href="https://swagger.io/specification/"&gt;OpenAPI&lt;/a&gt; with &lt;a href="https://developers.redhat.com/topics/dotnet"&gt;.NET Core&lt;/a&gt;. OpenAPI is a specification for describing RESTful APIs. First, I&amp;#8217;ll show you how to use OpenAPI to describe the APIs provided by an ASP.NET Core service. Then, we&amp;#8217;ll use the API description to generate a strongly-typed client to use the web service with C#.&lt;/p&gt; &lt;h2&gt;Writing OpenAPI descriptions&lt;/h2&gt; &lt;p&gt;Developers use the &lt;a target="_blank" rel="nofollow" href="https://swagger.io/specification/"&gt;OpenAPI specification&lt;/a&gt; to describe RESTful APIs. We can then use OpenAPI descriptions to generate a strongly-typed client library that is capable of accessing the APIs.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: &lt;em&gt;Swagger&lt;/em&gt; is sometimes used synonymously with OpenAPI. It refers to a widely used toolset for working with the OpenAPI specification.&lt;/p&gt; &lt;p&gt;&lt;span id="more-749667"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Build the web service&lt;/h3&gt; &lt;p&gt;In this section, we&amp;#8217;ll use the &lt;a href="https://developers.redhat.com/topics/open-source"&gt;open source&lt;/a&gt; &lt;a target="_blank" rel="nofollow" href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore"&gt;Swashbuckle.AspNetCore&lt;/a&gt; package to provide an OpenAPI description of an ASP.NET Core application.&lt;/p&gt; &lt;p&gt;We start by creating a &lt;code&gt;webapi&lt;/code&gt; template application:&lt;/p&gt; &lt;pre&gt;$ dotnet new webapi -o WebApi1 $ cd WebApi1 &lt;/pre&gt; &lt;p&gt;The &lt;code&gt;webapi&lt;/code&gt; template includes a REST API to get a weather forecast. The API is implemented in the &lt;code&gt;WeatherForecastController.cs&lt;/code&gt; file.&lt;/p&gt; &lt;p&gt;Next, we add the &lt;code&gt;Swashbuckle.AspNetCore&lt;/code&gt; package:&lt;/p&gt; &lt;pre&gt;$ dotnet add package Swashbuckle.AspNetCore &lt;/pre&gt; &lt;p&gt;Now, we make a few edits to the &lt;code&gt;Startup.cs&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;public void ConfigureServices(IServiceCollection services) { services.AddControllers(); + + services.AddSwaggerGen(); } public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { .... app.UseHttpsRedirection(); + app.UseSwagger(); + + app.UseSwaggerUI(c =&amp;#62; + { + c.SwaggerEndpoint("/swagger/v1/swagger.json", "My API V1"); + }); + app.UseRouting(); app.UseAuthorization(); &lt;/pre&gt; &lt;p&gt;In the &lt;code&gt;ConfigureServices&lt;/code&gt; method, we call &lt;code&gt;AddSwaggerGen&lt;/code&gt;. Calling &lt;code&gt;AddSwaggerGen&lt;/code&gt; makes the API description available. The API can then be consumed through ASP.NET Core&amp;#8217;s dependency injection (DI) system. &lt;code&gt;UseSwagger&lt;/code&gt; uses these descriptions to create an HTTP endpoint at &lt;code&gt;/swagger/v1/swagger.json&lt;/code&gt;. The &lt;code&gt;UseSwaggerUI&lt;/code&gt; then provides a user interface (UI) at &lt;code&gt;/swagger&lt;/code&gt; that allows users to easily consume the exposed API from a browser.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: The methods called in &lt;code&gt;Startup.cs&lt;/code&gt; accept a delegate for configuration. For useful options, see the ASP.NET Core documentation, &lt;a target="_blank" rel="nofollow" href="https://docs.microsoft.com/en-us/aspnet/core/tutorials/getting-started-with-swashbuckle"&gt;Get started with Swashbuckle and ASP.NET Core&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Run the app&lt;/h3&gt; &lt;p&gt;You can run the application and browse to the Swagger UI, which is shown in Figure 1.&lt;/p&gt; &lt;div id="attachment_749697" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/swagger_ui.png"&gt;&lt;img aria-describedby="caption-attachment-749697" class="wp-image-749697" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/swagger_ui.png" alt="A screenshot of the weather app in the Swagger UI." width="640" height="593" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/swagger_ui.png 721w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/swagger_ui-300x278.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-749697" class="wp-caption-text"&gt;Figure 1: The weather app in the Swagger UI.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The &lt;code&gt;Swashbuckle.AspNetCore&lt;/code&gt; packages picked up the ASP.NET endpoints. The exposed UI makes it easy to invoke the REST endpoints.&lt;/p&gt; &lt;h2&gt;Consuming OpenAPI descriptions&lt;/h2&gt; &lt;p&gt;In this section, we&amp;#8217;ll look at consuming a RESTful API that has an OpenAPI description. To consume the API, we&amp;#8217;ll use the open source package, &lt;a target="_blank" rel="nofollow" href="https://github.com/RicoSuter/NSwag"&gt;NSwag.ApiDescription.Client&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;First, we create a new &lt;code&gt;console&lt;/code&gt; project, and download the OpenAPI description from our ASP.NET application:&lt;/p&gt; &lt;pre&gt;$ dotnet new console -o console $ cd console $ mkdir openapi $ wget --no-check-certificate https://localhost:5001/swagger/v1/swagger.json -O openapi/weather.json &lt;/pre&gt; &lt;p&gt;Now, we&amp;#8217;ll make a few edits to the project file. These edits will be used to generate a strongly-typed client when the .NET project is built:&lt;/p&gt; &lt;pre&gt;&amp;#60;Project Sdk="Microsoft.NET.Sdk"&amp;#62; &amp;#60;PropertyGroup&amp;#62; &amp;#60;OutputType&amp;#62;Exe&amp;#60;/OutputType&amp;#62; &amp;#60;TargetFramework&amp;#62;netcoreapp3.1&amp;#60;/TargetFramework&amp;#62; &amp;#60;/PropertyGroup&amp;#62; + &amp;#60;ItemGroup&amp;#62; + &amp;#60;PackageReference Include="Newtonsoft.Json" Version="12.0.2" /&amp;#62; + &amp;#60;PackageReference Include="NSwag.ApiDescription.Client" Version="13.0.5" /&amp;#62; + &amp;#60;/ItemGroup&amp;#62; + &amp;#60;ItemGroup&amp;#62; + &amp;#60;OpenApiReference Include="openapi/weather.json" Namespace="WeatherService"&amp;#62; + &amp;#60;ClassName&amp;#62;WeatherClient&amp;#60;/ClassName&amp;#62; + &amp;#60;OutputPath&amp;#62;WeatherClient.cs&amp;#60;/OutputPath&amp;#62; + &amp;#60;/OpenApiReference&amp;#62; + &amp;#60;/ItemGroup&amp;#62; &amp;#60;/Project&amp;#62; &lt;/pre&gt; &lt;p&gt;We&amp;#8217;ve added references to the &lt;code&gt;NSwag.ApiDescription.Client&lt;/code&gt; and &lt;code&gt;Newtonsoft.Json&lt;/code&gt; packages. An &lt;code&gt;OpenApiReference&lt;/code&gt; element refers to the API description that we downloaded earlier. It adds attributes that are required to generate the code, such as the class name, namespace, and filename.&lt;/p&gt; &lt;h3&gt;Build the client&lt;/h3&gt; &lt;p&gt;Now, we&amp;#8217;ll invoke the &lt;code&gt;build&lt;/code&gt; command. Invoking the command generates a &lt;code&gt;WeatherClient.cs&lt;/code&gt; file, which lives under the &lt;code&gt;obj&lt;/code&gt; directory:&lt;/p&gt; &lt;pre&gt;$ dotnet build &lt;/pre&gt; &lt;p&gt;We can now edit the &lt;code&gt;Program.cs&lt;/code&gt; file and use the strongly-typed &lt;code&gt;WeatherClient&lt;/code&gt; class that we&amp;#8217;ve just generated:&lt;/p&gt; &lt;pre&gt;static async Task Main(string[] args) { // Configure HttpClientHandler to ignore certificate validation errors. using var httpClientHandler = new HttpClientHandler(); httpClientHandler.ServerCertificateCustomValidationCallback = (message, cert, chain, errors) =&amp;#62; { return true; }; // Create WeatherClient. using var httpClient = new HttpClient(httpClientHandler); var weatherClient = new WeatherService.WeatherClient("http://localhost:5000", httpClient); // Call WeatherForecast API. var forecast = await weatherClient.WeatherForecastAsync(); foreach (var item in forecast) { Console.WriteLine($"{item.Date} - {item.Summary}"); } } &lt;/pre&gt; &lt;h3&gt;Run the app&lt;/h3&gt; &lt;p&gt;Finally, we run the application:&lt;/p&gt; &lt;pre&gt;$ dotnet run 7/1/2020 1:18:18 PM +02:00 - Mild 7/2/2020 1:18:18 PM +02:00 - Bracing 7/3/2020 1:18:18 PM +02:00 - Freezing 7/4/2020 1:18:18 PM +02:00 - Balmy 7/5/2020 1:18:18 PM +02:00 - Bracing &lt;/pre&gt; &lt;p&gt;As you can see, the weather report is mixed.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, you learned about the OpenAPI specification, which is sometimes used synonymously with Swagger. Developers use the OpenAPI spec to describe RESTful APIs in preparation for being consumed by a client. I showed you how to use the &lt;a target="_blank" rel="nofollow" href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore"&gt;Swashbuckle.AspNetCore&lt;/a&gt; package to provide an OpenAPI description of an API implemented using ASP.NET Core. Then, we used the &lt;a target="_blank" rel="nofollow" href="https://github.com/RicoSuter/NSwag"&gt;NSwag.ApiDescription.Client&lt;/a&gt; package to generate a strongly-typed client capable of consuming the API.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F16%2Fusing-openapi-with-net-core%2F&amp;#38;linkname=Using%20OpenAPI%20with%20.NET%20Core" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F16%2Fusing-openapi-with-net-core%2F&amp;#38;linkname=Using%20OpenAPI%20with%20.NET%20Core" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F16%2Fusing-openapi-with-net-core%2F&amp;#38;linkname=Using%20OpenAPI%20with%20.NET%20Core" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F16%2Fusing-openapi-with-net-core%2F&amp;#38;linkname=Using%20OpenAPI%20with%20.NET%20Core" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F16%2Fusing-openapi-with-net-core%2F&amp;#38;linkname=Using%20OpenAPI%20with%20.NET%20Core" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F16%2Fusing-openapi-with-net-core%2F&amp;#38;linkname=Using%20OpenAPI%20with%20.NET%20Core" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F16%2Fusing-openapi-with-net-core%2F&amp;#38;linkname=Using%20OpenAPI%20with%20.NET%20Core" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F16%2Fusing-openapi-with-net-core%2F&amp;#038;title=Using%20OpenAPI%20with%20.NET%20Core" data-a2a-url="https://developers.redhat.com/blog/2020/09/16/using-openapi-with-net-core/" data-a2a-title="Using OpenAPI with .NET Core"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/09/16/using-openapi-with-net-core/"&gt;Using OpenAPI with .NET Core&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/2WFWQmVJCSs" height="1" width="1" alt=""/&gt;</content><summary>In this article, we’ll look at using OpenAPI with .NET Core. OpenAPI is a specification for describing RESTful APIs. First, I’ll show you how to use OpenAPI to describe the APIs provided by an ASP.NET Core service. Then, we’ll use the API description to generate a strongly-typed client to use the web service with C#. Writing OpenAPI descriptions Developers use the OpenAPI specification to describe...</summary><dc:creator>Tom Deseyn</dc:creator><dc:date>2020-09-16T07:00:31Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/09/16/using-openapi-with-net-core/</feedburner:origLink></entry><entry><title>This Week in JBoss - 16 September 2020</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/KahKjtWuUhw/weekly-2020-09-16.html" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="infinispan" scheme="searchisko:content:tags" /><category term="jgroups" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><author><name>Don Naro</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_16_september_2020</id><updated>2020-09-16T00:00:00Z</updated><published>2020-09-16T00:00:00Z</published><content type="html">&lt;article class="" data-tags="jgroups, quarkus, infinispan"&gt; &lt;h1&gt;This Week in JBoss - 16 September 2020&lt;/h1&gt; &lt;p&gt;Welcome to another edition of the JBoss Editorial where we gather news from our communities and explore developments from our projects.&lt;/p&gt; &lt;p&gt;Our very own Mark Little goes into detail to explain Quarkus and Jakarta EE compatibility. Mark gives an insightful breakdown of the history for both projects and answers a much asked question, will Quarkus and Jarkata EE come together? No spoilers here, though. Go read Mark’s &lt;a href="https://developers.redhat.com/blog/2020/09/11/quarkus-and-jakarta-ee-together-or-not/"&gt;Quarkus and Jakarta EE: Together, or not?&lt;/a&gt; if you already haven’t.&lt;/p&gt; &lt;p&gt;In the evangelist’s corner, Eric Schabell has brought out an excellent &lt;a href="https://www.schabell.org/2020/09/beginners-guide-to-decision-management-retail-web-shop.html"&gt;hands-on workshop with labs&lt;/a&gt; for Red Hat Decision Manager that show you how to design and build a retail web shop from scratch.&lt;/p&gt; &lt;p&gt;Eric also teams up with Ramon Villarreal to bring you architectural blueprints for &lt;a href="https://www.schabell.org/2020/09/financial-payments-architecture-an-introduction.html"&gt;cloud-native financial payment services&lt;/a&gt;. The blueprints are focused on proven interactions, messaging, processing, and integration patterns that you can put to use when building a cloud-native payment architecture.&lt;/p&gt; &lt;p&gt;Leon Matthews continues the topic of all things financial with his analysis of the history of Java in the banking sector and the role Quarkus is playing in allowing banks and financial institutions to embrace change, innovate to remain competitive, and become more efficient. Read Leon’s post: &lt;a href="https://www.redhat.com/en/blog/25-years-and-going-strong-why-java-matters-future-banks?source=bloglisting"&gt;25 years and going strong: Why Java matters to the future of banks&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Speaking of Quarkus, Clement Escoffier shows you how to build a stream of beer and then retrieve beers in a reactive way. After walking you through how you can do that with Mutiny, Clement provides a gist with all the code that you can compile and execute with jbang and a single command. You can find everything in his &lt;a href="https://quarkus.io/blog/mutiny-pagination/"&gt;Handling paginated APIs with Mutiny&lt;/a&gt; post.&lt;/p&gt; &lt;p&gt;Another post from the Quarkus team that is worth reading is Jeff Beck’s &lt;a href="https://quarkus.io/blog/wipro-customer-story/"&gt;Wipro Addresses Seismic Shift in Retail with Quarkus&lt;/a&gt;. Jeff shares the Wipro story by describing their needs and challenges and how they adopted Quarkus to modernize their applications and address customer use cases.&lt;/p&gt; &lt;p&gt;If it hasn’t crossed your radar, Bela Ban shows us his plans for a &lt;a href="http://belaban.blogspot.com/2020/09/one-size-fits-all-jgroups.html"&gt;One Size Fits All JGroups&lt;/a&gt; program and explains what is needed to get there.&lt;/p&gt; &lt;p&gt;Jakub Scholz on the Strimzi team shares a post that looks at using the &lt;a href="https://strimzi.io/blog/2020/09/01/enforce-custom-resource-policies-with-opa-gatekeeper/"&gt;Open Policy Agent Gatekeeper project to enforce policies when creating custom resources&lt;/a&gt; and demonstrates how this is useful. While the post focuses on Strimzi, Jakub points out how Gatekeeper can be used with other projects so go take a look.&lt;/p&gt; &lt;p&gt;Releases!!&lt;/p&gt; &lt;p&gt;Congratulations to the Infinispan team for releasing the Dev03 cut of Infinispan 12. Cross-site replication capabilities continue to advance with an SPI that includes configurable policies for merging conflicting values from asynchronous backups, a feature which guarantees data consistency between global Infinispan clusters. That’s no small feat of engineering! Find out about that and more over on the &lt;a href="https://infinispan.org/blog/2020/09/08/infinispan-12/"&gt;Infinispan blog&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Quarkus 1.8 is out with some shiny new features, including jbang integration for easy Quarkus-based scripting, support for multiple persistence units for the Hibernate ORM extension, a new Micrometer extension, and update to GraalVM 20.2 for building native apps from Quarkus projects. Here is the &lt;a href="https://quarkus.io/blog/quarkus-1-8-0-final-released/"&gt;announcement with all the info&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Keycloak have announced their new Account Console, built on React and PatternFly 4. The latest version offers a fresher look and feel with custom themes and extensions. Go &lt;a href="https://www.keycloak.org/2020/09/new-account-console.adoc"&gt;check it out&lt;/a&gt;.&lt;/p&gt; &lt;div class="author"&gt; &lt;pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/don-naro.png"&gt;&lt;/pfe-avatar&gt; &lt;span&gt;Don Naro&lt;/span&gt; &lt;/div&gt;&lt;/article&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/KahKjtWuUhw" height="1" width="1" alt=""/&gt;</content><summary>This Week in JBoss - 16 September 2020 Welcome to another edition of the JBoss Editorial where we gather news from our communities and explore developments from our projects. Our very own Mark Little goes into detail to explain Quarkus and Jakarta EE compatibility. Mark gives an insightful breakdown of the history for both projects and answers a much asked question, will Quarkus and Jarkata EE com...</summary><dc:creator>Don Naro</dc:creator><dc:date>2020-09-16T00:00:00Z</dc:date><feedburner:origLink>https://www.jboss.org/posts/weekly-2020-09-16.html</feedburner:origLink></entry><entry><title>Deploying serverless Node.js applications on Red Hat OpenShift, Part 1</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/85oe2cGkewI/" /><category term="CodeReady Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="javascript" scheme="searchisko:content:tags" /><category term="Knative" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="Node.js" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="serverless" scheme="searchisko:content:tags" /><category term="serverless node.js" scheme="searchisko:content:tags" /><author><name>Lucas Holmquist</name></author><id>searchisko:content:id:jbossorg_blog-deploying_serverless_node_js_applications_on_red_hat_openshift_part_1</id><updated>2020-09-15T07:00:24Z</updated><published>2020-09-15T07:00:24Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/topics/serverless-architecture"&gt;Red Hat OpenShift Serverless&lt;/a&gt; recently became GA, and with it came new options for application deployment. This article introduces one of those new options, &lt;a href="https://developers.redhat.com/topics/serverless-architecture"&gt;Knative Serving&lt;/a&gt;. I provide an overview of OpenShift Serverless and Knative Serving, then show you how to deploy a &lt;a href="https://developers.redhat.com/blog/category/node-js/"&gt;Node.js application&lt;/a&gt; as a Knative Serving service.&lt;/p&gt; &lt;h2&gt;What is OpenShift Serverless?&lt;/h2&gt; &lt;p&gt;According to the &lt;a target="_blank" rel="nofollow" href="https://www.openshift.com/blog/openshift-serverless-now-ga"&gt;OpenShift Serverless GA release&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;&lt;i&gt;OpenShift Serverless enables developers to build what they want, when they want, with whatever tools and languages they need. Developers can quickly get their applications up and deployed using serverless compute, and they won&amp;#8217;t have to build and maintain larger container images to do so.&lt;/i&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;OpenShift Serverless is based on the &lt;a target="_blank" rel="nofollow" href="https://knative.dev"&gt;Knative&lt;/a&gt; open source &lt;a href="https://developers.redhat.com/topics/kubernetes"&gt;Kubernetes&lt;/a&gt; serverless project. While it has a few different parts, we will focus on deploying a serverless Node.js application as a Knative Serving service.&lt;/p&gt; &lt;p&gt;&lt;span id="more-731067"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Knative Serving&lt;/h2&gt; &lt;p&gt;So, what is Knative Serving? The official OpenShift documentation has a &lt;a target="_blank" rel="nofollow" href="https://docs.openshift.com/container-platform/4.5/serverless/serverless-getting-started.html"&gt;buzzword-filled section about it&lt;/a&gt;, but we are most interested in the ability to scale to zero.&lt;/p&gt; &lt;p&gt;Applications running on OpenShift and Kubernetes run inside a &lt;a href="https://developers.redhat.com/topics/containers/"&gt;container&lt;/a&gt; or &lt;i&gt;pod&lt;/i&gt;. An OpenShift pod needs to be &lt;em&gt;up&lt;/em&gt; if we want users to be able to access our application. A containerized application deployed as a Knative Serving service can be &lt;em&gt;off&lt;/em&gt; until a request comes in—that is what we mean by &amp;#8220;scale to zero.&amp;#8221; When a request comes in, the application starts and begins receiving requests. Knative orchestrates all of this.&lt;/p&gt; &lt;h2&gt;Getting started with Knative Serving&lt;/h2&gt; &lt;p&gt;If you want to follow along with the example, you will need to have OpenShift Serverless installed on your OpenShift cluster. The OpenShift Serverless documentation has instructions for &lt;a target="_blank" rel="nofollow" href="https://docs.openshift.com/container-platform/4.5/serverless/installing_serverless/installing-openshift-serverless.html"&gt;setting up OpenShift Serverless&lt;/a&gt;, and for &lt;a target="_blank" rel="nofollow" href="https://docs.openshift.com/container-platform/4.5/serverless/installing_serverless/installing-knative-serving.html"&gt;setting up Knative Serving&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For local development, I use &lt;a href="https://developers.redhat.com/products/codeready-containers/overview"&gt;Red Hat CodeReady Containers&lt;/a&gt; (CRC) to run OpenShift locally. Note that CRC with OpenShift Serverless installed can be a little memory intensive.&lt;/p&gt; &lt;h3&gt;Deploying the Node.js application&lt;/h3&gt; &lt;p&gt;The example in the &lt;a target="_blank" rel="nofollow" href="https://docs.openshift.com/container-platform/4.3/applications/application_life_cycle_management/odc-creating-applications-using-developer-perspective.html"&gt;OpenShift documentation&lt;/a&gt; shows how to use a Git repository, hosted on GitHub, to deploy an application as a Knative Serving service. That&amp;#8217;s fine, but if I&amp;#8217;m in development and coding on my laptop, I don&amp;#8217;t want to have to push my changes to GitHub just to see my application running.&lt;/p&gt; &lt;p&gt;Another option is to use an already built image to create a Knative Serving service. The YAML for that service might look something like this:&lt;/p&gt; &lt;pre&gt;apiVersion: serving.knative.dev/v1 kind: Service metadata: name: hello namespace: default spec: template: spec: containers: - image: docker.io/openshift/hello-openshift env: - name: RESPONSE value: "Hello Serverless!" &lt;/pre&gt; &lt;p&gt;But again, this example shows an image being hosted on Docker Hub, which brings up the same predicament as deploying from GitHub.&lt;/p&gt; &lt;p&gt;For local development, I prefer using the Nodeshift module. I&amp;#8217;ve &lt;a href="https://developers.redhat.com/blog/2019/08/30/easily-deploy-node-js-applications-to-red-hat-openshift-using-nodeshift/"&gt;introduced Nodeshift&lt;/a&gt; elsewhere, so I won&amp;#8217;t write much about it here.&lt;/p&gt; &lt;h3&gt;The Node.js example application&lt;/h3&gt; &lt;p&gt;For this example, I&amp;#8217;ll use an application that I&amp;#8217;ve used before, a basic &lt;a target="_blank" rel="nofollow" href="https://github.com/nodeshift-starters/nodejs-rest-http"&gt;REST application&lt;/a&gt; that is built with &lt;a target="_blank" rel="nofollow" href="https://expressjs.com"&gt;Express.js&lt;/a&gt;. As a refresher, the Express.js application has an input form that takes a name and sends it to a REST endpoint, which generates a greeting. When you pass in a name, it is appended to the greeting and sent back. To see the application running locally, enter the following command:&lt;/p&gt; &lt;pre&gt;$ npm install &amp;#38;&amp;#38; npm start &lt;/pre&gt; &lt;p&gt;To deploy the Node.js application as a Knative service, we only have to call Nodeshift with the experimental &lt;code&gt;--knative&lt;/code&gt; flag. The command would look something like this:&lt;/p&gt; &lt;pre&gt;$ npx nodeshift --knative &lt;/pre&gt; &lt;p&gt;This command archives our source code and sends it to OpenShift, where a Source-to-Image (S2I) build results in an &lt;code&gt;ImageStream&lt;/code&gt;. This is all standard Nodeshift stuff. Once the build has completed, Nodeshift creates a Knative service, which uses the &lt;code&gt;ImageStream&lt;/code&gt; we&amp;#8217;ve just built as its input. This procedure is similar to pulling an image from Docker Hub, but in this case, the image is stored in OpenShift&amp;#8217;s internal registry.&lt;/p&gt; &lt;h3&gt;Run the application&lt;/h3&gt; &lt;p&gt;We could use &lt;code&gt;oc&lt;/code&gt; commands to see that our application is running, but it&amp;#8217;s easier to understand what is happening with something more visual. Let&amp;#8217;s use the OpenShift web console&amp;#8217;s new Topology view, as shown in Figure 1.&lt;/p&gt; &lt;div id="attachment_737647" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/crc-nodejs-serverless.png"&gt;&lt;img aria-describedby="caption-attachment-737647" class="wp-image-737647 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/crc-nodejs-serverless-1024x522.png" alt="A screenshot of the serverless Node.js application in the OpenShift dashboard's Topology view." width="640" height="326" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/crc-nodejs-serverless-1024x522.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/crc-nodejs-serverless-300x153.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/crc-nodejs-serverless-768x391.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-737647" class="wp-caption-text"&gt;Figure 1. View the running application in OpenShift&amp;#8217;s Topology view.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The application is deployed as a Knative service. Most likely, the blue circle (which indicates that a pod is running successfully) is not filled. Our app is currently scaled to zero and waiting for a request to come in before it starts up.&lt;/p&gt; &lt;p&gt;Clicking on the link icon in the top-right corner of the application opens it. This is the first time that we are accessing the app, so it takes a few seconds to load. Our application is now starting up. It&amp;#8217;s a basic Express.js application, so it starts quickly, as you can see in Figure 2.&lt;/p&gt; &lt;div id="attachment_737657" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/nodejs-serverless-applicaiton.png"&gt;&lt;img aria-describedby="caption-attachment-737657" class="wp-image-737657 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/nodejs-serverless-applicaiton-1024x515.png" alt="A screenshot of the Express.js application displayed in browser." width="640" height="322" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/nodejs-serverless-applicaiton-1024x515.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/nodejs-serverless-applicaiton-300x151.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/nodejs-serverless-applicaiton-768x386.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-737657" class="wp-caption-text"&gt;Figure 2. The Express.js application running successfully in a browser.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The application in the Topology view now has that familiar blue circle, as shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_737667" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/crc-nodejs-serverless-scaled.png"&gt;&lt;img aria-describedby="caption-attachment-737667" class="wp-image-737667 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/crc-nodejs-serverless-scaled-1024x526.png" alt="A screenshot of the OpenShift Topology view showing the application now scaled up." width="640" height="329" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/crc-nodejs-serverless-scaled-1024x526.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/crc-nodejs-serverless-scaled-300x154.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/crc-nodejs-serverless-scaled-768x395.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-737667" class="wp-caption-text"&gt;Figure 3. The blue circle indicates that the Knative Serving service application has started.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;By default, after 300 seconds (5 minutes), the running pod terminates and scales back to zero. The next time that you access the application, the startup cycle will happen again.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, I&amp;#8217;ve shown you a small part of what OpenShift Serverless can do. In future articles, we&amp;#8217;ll look at more features and how they relate to Node.js. This article focused on deploying a Node.js app as a Knative Serving service, but you might have noticed that Knative and OpenShift Serverless don&amp;#8217;t care what type of application you use. In a future article, I&amp;#8217;ll discuss the things that you should consider when creating a Node.js application to be deployed as a serverless application.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F15%2Fdeploying-serverless-node-js-applications-on-red-hat-openshift-part-1%2F&amp;#38;linkname=Deploying%20serverless%20Node.js%20applications%20on%20Red%20Hat%20OpenShift%2C%20Part%201" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F15%2Fdeploying-serverless-node-js-applications-on-red-hat-openshift-part-1%2F&amp;#38;linkname=Deploying%20serverless%20Node.js%20applications%20on%20Red%20Hat%20OpenShift%2C%20Part%201" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F15%2Fdeploying-serverless-node-js-applications-on-red-hat-openshift-part-1%2F&amp;#38;linkname=Deploying%20serverless%20Node.js%20applications%20on%20Red%20Hat%20OpenShift%2C%20Part%201" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F15%2Fdeploying-serverless-node-js-applications-on-red-hat-openshift-part-1%2F&amp;#38;linkname=Deploying%20serverless%20Node.js%20applications%20on%20Red%20Hat%20OpenShift%2C%20Part%201" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F15%2Fdeploying-serverless-node-js-applications-on-red-hat-openshift-part-1%2F&amp;#38;linkname=Deploying%20serverless%20Node.js%20applications%20on%20Red%20Hat%20OpenShift%2C%20Part%201" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F15%2Fdeploying-serverless-node-js-applications-on-red-hat-openshift-part-1%2F&amp;#38;linkname=Deploying%20serverless%20Node.js%20applications%20on%20Red%20Hat%20OpenShift%2C%20Part%201" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F15%2Fdeploying-serverless-node-js-applications-on-red-hat-openshift-part-1%2F&amp;#38;linkname=Deploying%20serverless%20Node.js%20applications%20on%20Red%20Hat%20OpenShift%2C%20Part%201" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F15%2Fdeploying-serverless-node-js-applications-on-red-hat-openshift-part-1%2F&amp;#038;title=Deploying%20serverless%20Node.js%20applications%20on%20Red%20Hat%20OpenShift%2C%20Part%201" data-a2a-url="https://developers.redhat.com/blog/2020/09/15/deploying-serverless-node-js-applications-on-red-hat-openshift-part-1/" data-a2a-title="Deploying serverless Node.js applications on Red Hat OpenShift, Part 1"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/09/15/deploying-serverless-node-js-applications-on-red-hat-openshift-part-1/"&gt;Deploying serverless Node.js applications on Red Hat OpenShift, Part 1&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/85oe2cGkewI" height="1" width="1" alt=""/&gt;</content><summary>Red Hat OpenShift Serverless recently became GA, and with it came new options for application deployment. This article introduces one of those new options, Knative Serving. I provide an overview of OpenShift Serverless and Knative Serving, then show you how to deploy a Node.js application as a Knative Serving service. What is OpenShift Serverless? According to the OpenShift Serverless GA release: ...</summary><dc:creator>Lucas Holmquist</dc:creator><dc:date>2020-09-15T07:00:24Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/09/15/deploying-serverless-node-js-applications-on-red-hat-openshift-part-1/</feedburner:origLink></entry><entry><title>JBoss Tools 4.17.0.AM1 for Eclipse 2020-09</title><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/jbossbuzz/~3/XEMDI3n0J6Q/4.17.0.am1.html" /><category term="release" /><category term="jbosstools" /><category term="devstudio" /><category term="jbosscentral" /><author><name>jeffmaury</name></author><id>https://tools.jboss.org/blog/4.17.0.am1.html</id><updated>2020-09-16T13:27:44Z</updated><published>2020-09-15T00:00:00Z</published><content type="html">&lt;div&gt;&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Happy to announce 4.17.0.AM1 (Developer Milestone 1) build for Eclipse 2020-09.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Downloads available at &lt;a href="https://tools.jboss.org/downloads/jbosstools/2020-09/4.17.0.AM1.html"&gt;JBoss Tools 4.17.0 AM1&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-new"&gt;&lt;a class="anchor" href="#what-is-new"&gt;&lt;/a&gt;What is New?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Full info is at &lt;a href="https://tools.jboss.org/documentation/whatsnew/jbosstools/4.17.0.AM1.html"&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="quarkus"&gt;&lt;a class="anchor" href="#quarkus"&gt;&lt;/a&gt;Quarkus&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="support-for-yaml-configuration-file"&gt;&lt;a class="anchor" href="#support-for-yaml-configuration-file"&gt;&lt;/a&gt;Support for YAML configuration file&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Quarkus supports configuration through YAML format. For more information, see the &lt;a href="https://quarkus.io/guides/config#yaml"&gt;Quarkus documentation&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In order to use it, follow the steps:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;create a Quarkus project using the new Quarkus wizard&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;create a new &lt;code&gt;application.yaml&lt;/code&gt; or &lt;code&gt;application.yml&lt;/code&gt; next to the &lt;code&gt;application.properties&lt;/code&gt; in &lt;code&gt;src/main/resources&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The editor will open and you will get content assist and syntax validation.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="hibernate-tools"&gt;&lt;a class="anchor" href="#hibernate-tools"&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime providers.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="new-runtime-provider"&gt;&lt;a class="anchor" href="#new-runtime-provider"&gt;&lt;/a&gt;New Runtime Provider&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new runtime provider has been added for Hibernate 6.0. It incorporates Hibernate Core version 6.0.0.Alpha6 and Hibernate Tools version 6.0.0.Alpha2.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="runtime-provider-updates"&gt;&lt;a class="anchor" href="#runtime-provider-updates"&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.21.Final and Hibernate Tools version 5.4.21.Final.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.18.Final and Hibernate Tools version 5.3.18.Final.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enjoy!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Jeff Maury&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/XEMDI3n0J6Q" height="1" width="1" alt=""/&gt;</content><summary>Happy to announce 4.17.0.AM1 (Developer Milestone 1) build for Eclipse 2020-09. Downloads available at JBoss Tools 4.17.0 AM1. What is New? Full info is at this page. Some highlights are below. Quarkus Support for YAML configuration file Quarkus supports configuration through YAML format. For more information, see the Quarkus documentation In order to use it, follow the steps: create a Quarkus project using the new Quarkus wizard create a new application.yaml or application.yml next to the application.properties in src/main/resources The editor will open and you will get content assist and syntax validation. Hibernate Tools A number of additions and updates have been performed on the available Hibernate runtime providers. New Runtime Provider A new...</summary><dc:creator>jeffmaury</dc:creator><dc:date>2020-09-15T00:00:00Z</dc:date><feedburner:origLink>https://tools.jboss.org/blog/4.17.0.am1.html</feedburner:origLink></entry><entry><title>Centralpoint webinar - Hybrid multi-cloud do's and don'ts</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/T4M4uFn7DhU/centralpoint-webinar-hybrid-multi-cloud.html" /><category term="cloud" scheme="searchisko:content:tags" /><category term="event" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="video" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-centralpoint_webinar_hybrid_multi_cloud_do_s_and_don_ts</id><updated>2020-09-14T05:00:07Z</updated><published>2020-09-14T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-id-3iI6TzX8/X1ocIIJ4eZI/AAAAAAAAxec/ZcWKZ0YQii8lbklCVSJXTRIs7Me3Z6TngCNcBGAsYHQ/s1600/austin-distel-VCFxt2yT1eQ-unsplash.jpg" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="centralpoint webinar hybrid multi-cloud" border="0" data-original-height="1200" data-original-width="1600" height="240" src="https://1.bp.blogspot.com/-id-3iI6TzX8/X1ocIIJ4eZI/AAAAAAAAxec/ZcWKZ0YQii8lbklCVSJXTRIs7Me3Z6TngCNcBGAsYHQ/s320/austin-distel-VCFxt2yT1eQ-unsplash.jpg" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;On Friday, 2 Oct 2020 I'll be joining a partner &lt;a href="https://solutions.centralpoint.nl/hybrid-multi-cloud/" target="_blank"&gt;Centralpoint to present a joint webinar&lt;/a&gt; on hybrid multi-cloud pitfalls.&lt;br /&gt;&lt;br /&gt;I'll be speaking together with Mark van Helden, Technical Consultant Hybrid Cloud, Centralpoint from 1100 - 1200 and it should be a lot of fun if you're interested in what some of the most common stumbling blocks are we're seeing out in the wild.&lt;br /&gt;&lt;br /&gt;Most of the speaking I do is focusing on English language session, but in this rare case you can join me for a full session in the Dutch language.&lt;br /&gt;&lt;br /&gt;Below all of the details about the session, &lt;a href="https://solutions.centralpoint.nl/hybrid-multi-cloud/" target="_blank"&gt;where to register&lt;/a&gt;, dates, times, and a Dutch outline of the webinar details.&lt;br /&gt;&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;&lt;a href="https://solutions.centralpoint.nl/hybrid-multi-cloud/" target="_blank"&gt;Webinar: Hybrid multi-cloud do’s and don’ts&lt;/a&gt;&lt;/h3&gt;&lt;a href="https://1.bp.blogspot.com/-L_V4E78X0w8/X1ocM8eHGZI/AAAAAAAAxeg/0v2kH7SrAVs_ZWKF4nC_5KRUHCZyRizFwCNcBGAsYHQ/s1600/webinar-cp.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="centralpoint webinar hybrid multi-cloud" border="0" data-original-height="423" data-original-width="1332" height="101" src="https://1.bp.blogspot.com/-L_V4E78X0w8/X1ocM8eHGZI/AAAAAAAAxeg/0v2kH7SrAVs_ZWKF4nC_5KRUHCZyRizFwCNcBGAsYHQ/s320/webinar-cp.png" title="" width="320" /&gt;&lt;/a&gt;Wij nemen u mee op reis door de wereld van hybrid multi-cloud. Wat is belangrijk en wat zijn de valkuilen?&lt;br /&gt;&lt;br /&gt;Op vrijdag 2 oktober organiseert Centralpoint een gratis webinar over de do’s and don’ts binnen Hybrid multi-cloud. Wat zijn de valkuilen en wat is echt belangrijk? Het webinar wordt gegeven door Eric Schabell, Portfolio Architect Director bij Red Hat en Mark van Helden, Technical Consultant Hybrid Cloud bij Centralpoint.&amp;nbsp;Het webinar start deze dag om 11.00 uur en eindigt omstreeks 12.00 uur.&lt;br /&gt;&lt;h4 style="text-align: left;"&gt;It’s very cloudy!&lt;/h4&gt;&lt;i&gt;De dagelijkse hype is overal om u heen! Van cloud, hybrid cloud tot hybrid multi-cloud, wordt u verteld dat dit de manier is om een digitale toekomst voor uw bedrijf te garanderen.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Wij nemen u mee op reis en kijken goed naar wat hybride multi-cloud voor uw bedrijf betekent, de beslissingen die worden genomen over het leveren van applicaties en het omgaan met legacy-applicaties, waarschijnlijk de belangrijkste bronnen voor uw bedrijf. Tijdens het webinar kunt u ook al uw vragen over deze onderwerpen aan ons stellen.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;a href="https://solutions.centralpoint.nl/hybrid-multi-cloud/" target="_blank"&gt;Registreren vandaag&lt;/a&gt; en tot vrijdag 2 oktober!&amp;nbsp; &amp;nbsp; (&lt;a href="https://solutions.centralpoint.nl/hybrid-multi-cloud/" target="_blank"&gt;Register today&lt;/a&gt; and hope to see you there!)&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=aN1qi4QM3pE:LOiaLIn36ew:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=aN1qi4QM3pE:LOiaLIn36ew:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=aN1qi4QM3pE:LOiaLIn36ew:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=aN1qi4QM3pE:LOiaLIn36ew:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=aN1qi4QM3pE:LOiaLIn36ew:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=aN1qi4QM3pE:LOiaLIn36ew:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=aN1qi4QM3pE:LOiaLIn36ew:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=aN1qi4QM3pE:LOiaLIn36ew:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=aN1qi4QM3pE:LOiaLIn36ew:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=aN1qi4QM3pE:LOiaLIn36ew:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=aN1qi4QM3pE:LOiaLIn36ew:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/aN1qi4QM3pE" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/T4M4uFn7DhU" height="1" width="1" alt=""/&gt;</content><summary>On Friday, 2 Oct 2020 I'll be joining a partner Centralpoint to present a joint webinar on hybrid multi-cloud pitfalls. I'll be speaking together with Mark van Helden, Technical Consultant Hybrid Cloud, Centralpoint from 1100 - 1200 and it should be a lot of fun if you're interested in what some of the most common stumbling blocks are we're seeing out in the wild. Most of the speaking I do is focu...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2020-09-14T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/aN1qi4QM3pE/centralpoint-webinar-hybrid-multi-cloud.html</feedburner:origLink></entry><entry><title>Must Read Free Kubernetes Books</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/c6wje5Dlmlg/must-read-free-kubernetes-books.html" /><category term="Cloud Native" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_ofbizian" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><author><name>Bilgin Ibryam</name></author><id>searchisko:content:id:jbossorg_blog-must_read_free_kubernetes_books</id><updated>2020-09-13T20:48:20Z</updated><published>2020-09-11T09:48:00Z</published><content type="html">&lt;p&gt;&lt;span data-preserver-spaces="true" style="background: transparent none repeat scroll 0% 0%; color: #0e101a; margin-bottom: 0pt; margin-top: 0pt;"&gt;There is a rise in offerings of free educational content, free software, free cloud resources with the single goal of capturing the new kingmaker's attention. While this is a change for good, I&amp;nbsp;&lt;/span&gt;&lt;a class="editor-rtfLink" href="http://www.ofbizian.com/2020/08/free-and-open-source-is-not-good-enough.html" style="background: transparent none repeat scroll 0% 0%; color: #4a6ee0; margin-bottom: 0pt; margin-top: 0pt;" target="_blank"&gt;&lt;span data-preserver-spaces="true" style="background: transparent none repeat scroll 0% 0%; color: #4a6ee0; margin-bottom: 0pt; margin-top: 0pt;"&gt;predict&lt;/span&gt;&lt;/a&gt;&lt;span data-preserver-spaces="true" style="background: transparent none repeat scroll 0% 0%; color: #0e101a; margin-bottom: 0pt; margin-top: 0pt;"&gt;&amp;nbsp;that is not going to be enough and this trend will only increase in the future. In a similar spirit, here I want to quickly share my favorite Kubernetes related books offered free of charge. I've read and found them all very useful at different stages of my learning. The list contains books that are sponsored and offered free of charge but in most cases that is for exchange of your contact details. If you prefer not to give your details, you can always go to Amazon, buy the data-capture-free book, and support the authors (&lt;a href="https://k8spatterns.io/" target="_blank"&gt;such as me&lt;/a&gt;) at the same time. I believe it is a privilege to work in this industry and I'm thankful for these authors and companies offering the choice of free-of-charge books.&amp;nbsp; Enjoy the list, and don’t come back here saying “&lt;i&gt;Hey, this is not free…why are you saying it is free... blah-blah&lt;/i&gt;". Here are my best of Kubernetes free picks, happy learning.&lt;/span&gt;&lt;/p&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;a href="https://developers.redhat.com/books/kubernetes-patterns/" target="_blank"&gt;Kubernetes Patterns&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://azure.microsoft.com/en-us/resources/designing-distributed-systems/en-us/" target="_blank"&gt;Designing Distributed Systems&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://developers.redhat.com/books/kubernetes-operators" target="_blank"&gt;Kubernetes Operators&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://k8s.vmware.com/kubernetes-up-and-running/" target="_blank"&gt;Kubernetes Up and Running&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.nginx.com/resources/library/monolith-to-microservices" target="_blank"&gt;Monolith to Microservices&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://developers.redhat.com/books/knative-cookbook" target="_blank"&gt;Knative Cookbook &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.starburstdata.com/oreilly-presto-guide-download/" target="_blank"&gt;Presto: The Definitive Guide&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-Wzour3Gt98U/X0kbn4ethJI/AAAAAAAAOlg/jABqtvp3-X8iTacpjZFl2s5K8xBjUpTxwCLcBGAsYHQ/s1656/Blank%2BDiagram%2B-%2BPage%2B7.png" style="margin-left: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img alt="Must Read Free Kubernetes Books" border="0" data-original-height="1472" data-original-width="1656" height="356" src="https://1.bp.blogspot.com/-Wzour3Gt98U/X0kbn4ethJI/AAAAAAAAOlg/jABqtvp3-X8iTacpjZFl2s5K8xBjUpTxwCLcBGAsYHQ/w400-h356/Blank%2BDiagram%2B-%2BPage%2B7.png" title="Must Read Free Kubernetes Books" width="400" /&gt;&lt;/a&gt; &lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;i&gt;Must Read Free Kubernetes Books&lt;/i&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;There are also other honorable mentions, but these are shorter editions (less than 100 pages) and for me these qualify as books written with marketing in mind. Yet I found these books very useful and a great value for money ;)&lt;br /&gt;&lt;/p&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;a href="https://www.nginx.com/resources/library/cloud-native-devops-with-kubernetes/" target="_blank"&gt;Cloud Native DevOps With Kubernetes&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.nginx.com/resources/library/the-enterprise-path-to-service-mesh-architectures/" target="_blank"&gt;The Enterprise Path to Service Mesh Architectures&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.confluent.io/designing-event-driven-systems/" target="_blank"&gt;Designing Event-Driven Systems&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href="https://developers.redhat.com/books/migrating-microservice-databases-relational-monolith-distributed-data" target="_blank"&gt;Migrating Microservice Databases &lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href="https://go2.striim.com/oreilly-streaming-integration-book" target="_blank"&gt;Streaming Integration&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.infoq.com/minibooks/java-dynamic-proxies/" target="_blank"&gt;Dynamic Proxies in Java&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Hope you enjoy the list! Share it, and comment with your free picks!&lt;br /&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/c6wje5Dlmlg" height="1" width="1" alt=""/&gt;</content><summary>There is a rise in offerings of free educational content, free software, free cloud resources with the single goal of capturing the new kingmaker's attention. While this is a change for good, I predict that is not going to be enough and this trend will only increase in the future. In a similar spirit, here I want to quickly share my favorite Kubernetes related books offered free of charge. I've re...</summary><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2020-09-11T09:48:00Z</dc:date><feedburner:origLink>http://www.ofbizian.com/2020/09/must-read-free-kubernetes-books.html</feedburner:origLink></entry></feed>
